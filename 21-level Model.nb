(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    355132,       6879]
NotebookOptionsPosition[    354349,       6857]
NotebookOutlinePosition[    354706,       6873]
CellTagsIndexPosition[    354663,       6870]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Q", "=", 
    RowBox[{"-", "4.945"}]}], ";", 
   RowBox[{"Cp", "=", 
    RowBox[{"-", "40"}]}], ";", 
   RowBox[{"Cv", "=", 
    RowBox[{"-", "23"}]}], ";", 
   RowBox[{"De", "=", "1420"}], ";", 
   RowBox[{"gammae", "=", "2.802"}], ";", 
   RowBox[{"gamman", "=", 
    RowBox[{"-", "0.003"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     SubscriptBox["T", "1"], "=", "1"}], ";", 
    RowBox[{
     SubscriptBox["T", "20"], "=", "33"}], ";", 
    RowBox[{
     SubscriptBox["T", "21"], "=", "1"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dg", "=", "2870"}], ";", 
  RowBox[{"\[CapitalGamma]", "=", "66"}], ";", 
  RowBox[{
   SubscriptBox["\[CapitalGamma]", "5"], "=", "\[CapitalGamma]"}], ";", 
  RowBox[{
   SubscriptBox["\[CapitalGamma]", "0"], "=", "7.9"}], ";", 
  RowBox[{
   SubscriptBox["\[CapitalGamma]", "1"], "=", "53"}], ";", 
  RowBox[{
   SubscriptBox["\[CapitalGamma]", "3"], "=", "1.0"}], ";", 
  RowBox[{
   SubscriptBox["\[CapitalGamma]", "4"], "=", "0.7"}], ";", 
  RowBox[{"Ap", "=", 
   RowBox[{"-", "2.162"}]}], ";", 
  RowBox[{"Av", "=", 
   RowBox[{"-", "2.62"}]}], ";", 
  RowBox[{"theta", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"20", "/", "180"}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"psi", "=", 
     RowBox[{"\[Pi]", "*", 
      RowBox[{"3", "/", "180"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"He", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cp", "+", "De", "+", 
        RowBox[{"Bz", " ", "gamman"}], "+", "Q", "+", 
        RowBox[{"Bz", " ", "gammae", " ", 
         RowBox[{"Cos", "[", "psi", "]"}]}]}], ",", "0", ",", "0", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"De", "+", 
        RowBox[{"Bz", " ", "gammae", " ", 
         RowBox[{"Cos", "[", "psi", "]"}]}]}], ",", "0", ",", "Cv", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "0", ",", "0", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{
        RowBox[{"-", "Cp"}], "+", "De", "-", 
        RowBox[{"Bz", " ", "gamman"}], "+", "Q", "+", 
        RowBox[{"Bz", " ", "gammae", " ", 
         RowBox[{"Cos", "[", "psi", "]"}]}]}], ",", "0", ",", "Cv", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "0", ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "Cv", ",", "0", ",", 
       RowBox[{
        RowBox[{"Bz", " ", "gamman"}], "+", "Q"}], ",", "0", ",", "0", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "Cv", ",", "0", ",", "0", ",", "0", 
       ",", "Cv", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "0", ",", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "Bz"}], " ", "gamman"}], "+", "Q"}], ",", "0", ",", 
       "Cv", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "Cv", ",", "0", ",", 
       RowBox[{
        RowBox[{"-", "Cp"}], "+", "De", "+", 
        RowBox[{"Bz", " ", "gamman"}], "+", "Q", "-", 
        RowBox[{"Bz", " ", "gammae", " ", 
         RowBox[{"Cos", "[", "psi", "]"}]}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "Cv", ",", "0", ",", 
       RowBox[{"De", "-", 
        RowBox[{"Bz", " ", "gammae", " ", 
         RowBox[{"Cos", "[", "psi", "]"}]}]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "0", ",", "0", ",", 
       RowBox[{"Cp", "+", "De", "-", 
        RowBox[{"Bz", " ", "gamman"}], "+", "Q", "-", 
        RowBox[{"Bz", " ", "gammae", " ", 
         RowBox[{"Cos", "[", "psi", "]"}]}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hg", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ap", "+", "Dg", "+", 
        RowBox[{"Bz", " ", "gamman"}], "+", "Q", "+", 
        RowBox[{"Bz", " ", "gammae", " ", 
         RowBox[{"Cos", "[", "psi", "]"}]}]}], ",", "0", ",", "0", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Dg", "+", 
        RowBox[{"Bz", " ", "gammae", " ", 
         RowBox[{"Cos", "[", "psi", "]"}]}]}], ",", "0", ",", "Av", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "0", ",", "0", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{
        RowBox[{"-", "Ap"}], "+", "Dg", "-", 
        RowBox[{"Bz", " ", "gamman"}], "+", "Q", "+", 
        RowBox[{"Bz", " ", "gammae", " ", 
         RowBox[{"Cos", "[", "psi", "]"}]}]}], ",", "0", ",", "Av", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "0", ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "Av", ",", "0", ",", 
       RowBox[{
        RowBox[{"Bz", " ", "gamman"}], "+", "Q"}], ",", "0", ",", "0", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "Av", ",", "0", ",", "0", ",", "0", 
       ",", "Av", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "0", ",", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "Bz"}], " ", "gamman"}], "+", "Q"}], ",", "0", ",", 
       "Av", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "Av", ",", "0", ",", 
       RowBox[{
        RowBox[{"-", "Ap"}], "+", "Dg", "+", 
        RowBox[{"Bz", " ", "gamman"}], "+", "Q", "-", 
        RowBox[{"Bz", " ", "gammae", " ", 
         RowBox[{"Cos", "[", "psi", "]"}]}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "Av", ",", "0", ",", 
       RowBox[{"Dg", "-", 
        RowBox[{"Bz", " ", "gammae", " ", 
         RowBox[{"Cos", "[", "psi", "]"}]}]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"gammae", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Bz", " ", 
            RowBox[{"Cos", "[", "theta", "]"}], " ", 
            RowBox[{"Sin", "[", "psi", "]"}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Bz", " ", 
            RowBox[{"Sin", "[", "psi", "]"}], " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], 
           SqrtBox["2"]]}], ")"}]}], ",", "0", ",", "0", ",", 
       RowBox[{"Ap", "+", "Dg", "-", 
        RowBox[{"Bz", " ", "gamman"}], "+", "Q", "-", 
        RowBox[{"Bz", " ", "gammae", " ", 
         RowBox[{"Cos", "[", "psi", "]"}]}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H", "=", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"21", ",", "21"}], "}"}]}], "]"}]}], ";", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "9"}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "9"}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"H", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
         RowBox[{"Hg", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";"}]}], "]"}]}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"1", "-", 
     RowBox[{"6", "ground", " ", "states"}]}], ",", " ", 
    RowBox[{"7", "-", 
     RowBox[{"9", " ", "singlet"}]}], ",", " ", 
    RowBox[{"10", "-", 
     RowBox[{"15", " ", "excited", " ", "states"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "13"}], ",", 
   RowBox[{"i", "\[LessEqual]", "21"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "13"}], ",", 
     RowBox[{"j", "\[LessEqual]", "21"}], ",", 
     RowBox[{"j", "++"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"H", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
       RowBox[{"He", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", "-", "12"}], ",", 
          RowBox[{"j", "-", "12"}]}], "]"}], "]"}]}], ";"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"H", "[", 
      RowBox[{"[", 
       RowBox[{"7", ",", "7"}], "]"}], "]"}], "=", "E1"}], ";"}], "*)"}], 
  RowBox[{
   RowBox[{"Rho", "=", 
    RowBox[{"Array", "[", 
     RowBox[{"rho", ",", 
      RowBox[{"{", 
       RowBox[{"21", ",", "21"}], "}"}]}], "]"}]}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sigma", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "100", "}"}], ",", 
     RowBox[{"{", "21", "}"}], ",", 
     RowBox[{"{", "21", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "9"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sigma", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", 
        RowBox[{"i", "+", "12"}]}], "]"}], "]"}], "=", "1"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "10"}], ",", 
   RowBox[{"i", "\[LessEqual]", "12"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sigma", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", 
        RowBox[{"i", "+", "3"}]}], "]"}], "]"}], "=", "1"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "13"}], ",", 
   RowBox[{"i", "\[LessEqual]", "15"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sigma", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"i", "-", "3"}], ",", 
        RowBox[{"i", "+", "3"}]}], "]"}], "]"}], "=", "1"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "16"}], ",", 
   RowBox[{"i", "\[LessEqual]", "18"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sigma", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"i", "-", "6"}], ",", 
        RowBox[{"i", "+", "3"}]}], "]"}], "]"}], "=", "1"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "19"}], ",", 
   RowBox[{"i", "\[LessEqual]", "21"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sigma", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"i", "-", "18"}], ",", 
        RowBox[{"i", "-", "9"}]}], "]"}], "]"}], "=", "1"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "22"}], ",", 
   RowBox[{"i", "\[LessEqual]", "24"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sigma", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"i", "-", "18"}], ",", 
        RowBox[{"i", "-", "12"}]}], "]"}], "]"}], "=", "1"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "25"}], ",", 
   RowBox[{"i", "\[LessEqual]", "27"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sigma", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"i", "-", "18"}], ",", 
        RowBox[{"i", "-", "15"}]}], "]"}], "]"}], "=", "1"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "28"}], ",", 
   RowBox[{"i", "\[LessEqual]", "36"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sigma", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"i", "-", "15"}], ",", 
        RowBox[{"i", "-", "27"}]}], "]"}], "]"}], "=", "1"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "37"}], ",", 
   RowBox[{"i", "\[LessEqual]", "39"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sigma", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"i", "-", "33"}], ",", 
        RowBox[{"i", "-", "24"}]}], "]"}], "]"}], "=", "1"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "40"}], ",", 
   RowBox[{"i", "\[LessEqual]", "42"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sigma", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"i", "-", "33"}], ",", 
        RowBox[{"i", "-", "27"}]}], "]"}], "]"}], "=", "1"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "43"}], ",", 
   RowBox[{"i", "\[LessEqual]", "45"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sigma", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"i", "-", "42"}], ",", 
        RowBox[{"i", "-", "27"}]}], "]"}], "]"}], "=", "1"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "46"}], ",", 
   RowBox[{"i", "\[LessEqual]", "48"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sigma", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"i", "-", "39"}], ",", 
        RowBox[{"i", "-", "30"}]}], "]"}], "]"}], "=", "1"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "49"}], ",", 
   RowBox[{"i", "\[LessEqual]", "51"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sigma", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"i", "-", "48"}], ",", 
        RowBox[{"i", "-", "30"}]}], "]"}], "]"}], "=", "1"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "52"}], ",", 
    RowBox[{"i", "\[LessEqual]", "54"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Sigma", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", "-", "48"}], ",", 
         RowBox[{"i", "-", "33"}]}], "]"}], "]"}], "=", "1"}], ";"}]}], "]"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "-", "9"}], ":", " ", 
     RowBox[{"spontaneous", " ", "decay"}]}], ",", " ", 
    RowBox[{"spin", "-", "conversing"}], ",", " ", 
    RowBox[{
     RowBox[{"10", "-", "18"}], ":", 
     RowBox[{
      RowBox[{"excited", " ", "states"}], "-", "singlet"}]}], ",", " ", 
    RowBox[{
     RowBox[{"19", "-", "27"}], ":", " ", 
     RowBox[{"singlet", "-", 
      RowBox[{"ground", " ", "states", "*"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"19", "-", "24"}], ":", " ", 
      RowBox[{"optical", " ", "excitation"}]}], ";", " ", 
     RowBox[{"25", "-"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "21"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "9"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"L", "=", 
     RowBox[{"L", "+", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "/", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ".", "Rho", ".", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Sigma", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "-", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", "Rho"}], "-", 
         RowBox[{"Rho", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "13"}], ",", 
    RowBox[{"i", "\[LessEqual]", "15"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"L", "=", 
     RowBox[{"L", "+", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalGamma]", "0"], "/", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ".", "Rho", ".", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Sigma", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "-", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", "Rho"}], "-", 
         RowBox[{"Rho", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}], ";", 
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "10"}], ",", 
    RowBox[{"i", "\[LessEqual]", "12"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"L", "=", 
     RowBox[{"L", "+", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalGamma]", "1"], "/", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ".", "Rho", ".", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Sigma", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "-", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", "Rho"}], "-", 
         RowBox[{"Rho", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "16"}], ",", 
    RowBox[{"i", "\[LessEqual]", "18"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"L", "=", 
     RowBox[{"L", "+", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalGamma]", "1"], "/", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ".", "Rho", ".", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Sigma", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "-", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", "Rho"}], "-", 
         RowBox[{"Rho", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "22"}], ",", 
    RowBox[{"i", "\[LessEqual]", "24"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"L", "=", 
     RowBox[{"L", "+", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalGamma]", "3"], "/", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ".", "Rho", ".", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Sigma", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "-", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", "Rho"}], "-", 
         RowBox[{"Rho", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "19"}], ",", 
    RowBox[{"i", "\[LessEqual]", "21"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"L", "=", 
     RowBox[{"L", "+", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalGamma]", "4"], "/", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ".", "Rho", ".", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Sigma", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "-", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", "Rho"}], "-", 
         RowBox[{"Rho", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "25"}], ",", 
    RowBox[{"i", "\[LessEqual]", "27"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"L", "=", 
     RowBox[{"L", "+", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalGamma]", "4"], "/", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ".", "Rho", ".", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Sigma", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "-", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", "Rho"}], "-", 
         RowBox[{"Rho", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "28"}], ",", 
    RowBox[{"i", "\[LessEqual]", "36"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"L", "=", 
     RowBox[{"L", "+", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalGamma]", "5"], "/", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ".", "Rho", ".", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Sigma", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "-", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", "Rho"}], "-", 
         RowBox[{"Rho", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "37"}], ",", 
    RowBox[{"i", "\[LessEqual]", "54"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"L", "=", 
     RowBox[{"L", "+", 
      RowBox[{"0.01", "*", 
       RowBox[{"\[CapitalGamma]", "/", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ".", "Rho", ".", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Sigma", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "-", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", "Rho"}], "-", 
         RowBox[{"Rho", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Sigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"Sigma", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"H", ".", "Rho"}], "-", 
       RowBox[{"Rho", ".", "H"}]}], ")"}]}], "+", "L"}]}], ";", 
  RowBox[{
   RowBox[{"M", "[", 
    RowBox[{"[", 
     RowBox[{"21", ",", "21"}], "]"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"3", ",", "3"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"4", ",", "4"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"5", ",", "5"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"6", ",", "6"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"7", ",", "7"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"8", ",", "8"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"9", ",", "9"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"10", ",", "10"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"11", ",", "11"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"12", ",", "12"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"13", ",", "13"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"14", ",", "14"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"15", ",", "15"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"16", ",", "16"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"17", ",", "17"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"18", ",", "18"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"19", ",", "19"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"20", ",", "20"}], "]"}], "]"}], "+", 
    RowBox[{"Rho", "[", 
     RowBox[{"[", 
      RowBox[{"21", ",", "21"}], "]"}], "]"}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "Bz_", "]"}], ":=", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Rho", "[", 
        RowBox[{"[", 
         RowBox[{"16", ",", "16"}], "]"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Rho", "[", 
          RowBox[{"[", 
           RowBox[{"16", ",", "16"}], "]"}], "]"}], "+", 
         RowBox[{"Rho", "[", 
          RowBox[{"[", 
           RowBox[{"17", ",", "17"}], "]"}], "]"}], "+", 
         RowBox[{"Rho", "[", 
          RowBox[{"[", 
           RowBox[{"18", ",", "18"}], "]"}], "]"}]}], ")"}]}], ")"}], "/.", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"M", "==", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"21", ",", "21"}], "}"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Flatten", "[", "Rho", "]"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F1", "[", "Bz_", "]"}], ":=", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Rho", "[", 
          RowBox[{"[", 
           RowBox[{"16", ",", "16"}], "]"}], "]"}], "+", 
         RowBox[{"Rho", "[", 
          RowBox[{"[", 
           RowBox[{"17", ",", "17"}], "]"}], "]"}], "+", 
         RowBox[{"Rho", "[", 
          RowBox[{"[", 
           RowBox[{"18", ",", "18"}], "]"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Rho", "[", 
          RowBox[{"[", 
           RowBox[{"16", ",", "16"}], "]"}], "]"}], "+", 
         RowBox[{"Rho", "[", 
          RowBox[{"[", 
           RowBox[{"17", ",", "17"}], "]"}], "]"}], "+", 
         RowBox[{"Rho", "[", 
          RowBox[{"[", 
           RowBox[{"18", ",", "18"}], "]"}], "]"}], "+", 
         RowBox[{"Rho", "[", 
          RowBox[{"[", 
           RowBox[{"19", ",", "19"}], "]"}], "]"}], "+", 
         RowBox[{"Rho", "[", 
          RowBox[{"[", 
           RowBox[{"20", ",", "20"}], "]"}], "]"}], "+", 
         RowBox[{"Rho", "[", 
          RowBox[{"[", 
           RowBox[{"21", ",", "21"}], "]"}], "]"}], "+", 
         RowBox[{"Rho", "[", 
          RowBox[{"[", 
           RowBox[{"13", ",", "13"}], "]"}], "]"}], "+", 
         RowBox[{"Rho", "[", 
          RowBox[{"[", 
           RowBox[{"14", ",", "14"}], "]"}], "]"}], "+", 
         RowBox[{"Rho", "[", 
          RowBox[{"[", 
           RowBox[{"15", ",", "15"}], "]"}], "]"}]}], ")"}]}], ")"}], "/.", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"M", "==", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"21", ",", "21"}], "}"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Flatten", "[", "Rho", "]"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"0", "/", "180"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fig0", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"F", "[", "Bz", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bz", ",", "0", ",", "1200"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<0Degree\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"0.5", "/", "180"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fig01", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"F", "[", "Bz", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bz", ",", "0", ",", "1200"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<0.5Degree\>\"", "}"}]}]}], "]"}]}], ";", 
  RowBox[{"psi", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"1", "/", "180"}]}]}], ";", 
  RowBox[{"Fig1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"F", "[", "Bz", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bz", ",", "0", ",", "1200"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<1Degree\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"1.5", "/", "180"}]}]}], ";", 
  RowBox[{"Fig1half", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"F", "[", "Bz", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bz", ",", "0", ",", "1200"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<1.5Degree\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"2", "/", "180"}]}]}], ";", 
  RowBox[{"Fig2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"F", "[", "Bz", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bz", ",", "0", ",", "1200"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<2Degree\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"2.5", "/", "180"}]}]}], ";", 
  RowBox[{"Fig2half", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"F", "[", "Bz", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bz", ",", "0", ",", "1200"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Yellow"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<2.5Degree\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"3", "/", "180"}]}]}], ";", 
  RowBox[{"Fig3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"F", "[", "Bz", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bz", ",", "0", ",", "1200"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Purple"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<3Degree\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "Fig0", ",", "Fig01", ",", "Fig1", ",", "Fig1half", ",", " ", "Fig2", ",", 
   "Fig2half", ",", " ", "Fig3", ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Nuclear Polarization\>\""}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B", "[", "G", "]"}], ",", 
      SubscriptBox["P", 
       RowBox[{"+", "1"}]]}], "}"}]}], ",", " ", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"0", "/", "180"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fig01", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"F1", "[", "Bz", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bz", ",", "0", ",", "1200"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<0Degree\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"0.5", "/", "180"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fig001", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"F1", "[", "Bz", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bz", ",", "0", ",", "1200"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<0.5Degree\>\"", "}"}]}]}], "]"}]}], ";", 
  RowBox[{"psi", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"1", "/", "180"}]}]}], ";", 
  RowBox[{"Fig11", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"F1", "[", "Bz", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bz", ",", "0", ",", "1200"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<1Degree\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"1.5", "/", "180"}]}]}], ";", 
  RowBox[{"Fig11half", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"F1", "[", "Bz", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bz", ",", "0", ",", "1200"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<1.5Degree\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"2", "/", "180"}]}]}], ";", 
  RowBox[{"Fig21", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"F1", "[", "Bz", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bz", ",", "0", ",", "1200"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<2Degree\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"2.5", "/", "180"}]}]}], ";", 
  RowBox[{"Fig21half", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"F1", "[", "Bz", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bz", ",", "0", ",", "1200"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Yellow"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<2.5Degree\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"3", "/", "180"}]}]}], ";", 
  RowBox[{"Fig31", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"F1", "[", "Bz", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bz", ",", "0", ",", "1200"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Purple"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<3Degree\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "Fig01", ",", "Fig001", ",", "Fig11", ",", "Fig11half", ",", " ", "Fig21", 
   ",", "Fig21half", ",", " ", "Fig31", ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Electronic Polarization\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B", "[", "G", "]"}], ",", 
      SubscriptBox["P", "0"]}], "}"}]}], ",", " ", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.77853850048098*^9, 3.7785385725697856`*^9}, {
   3.778538605264393*^9, 3.7785387023072433`*^9}, 3.7785387513525524`*^9, {
   3.7785389099679136`*^9, 3.7785389603650427`*^9}, {3.7785399145415287`*^9, 
   3.778539945492497*^9}, {3.7785401346684694`*^9, 3.7785401354478903`*^9}, {
   3.7785405963849773`*^9, 3.778540599053818*^9}, {3.778540649203498*^9, 
   3.7785407016441326`*^9}, {3.7785408158335056`*^9, 3.778540826931684*^9}, {
   3.778540863920588*^9, 3.778540909983597*^9}, {3.7785409472122545`*^9, 
   3.7785414503577156`*^9}, {3.778541481768371*^9, 3.7785415900115037`*^9}, {
   3.778541789489688*^9, 3.778541856568671*^9}, {3.778541890263695*^9, 
   3.7785420289381337`*^9}, {3.7785420725941677`*^9, 3.778542140114618*^9}, {
   3.778542296484478*^9, 3.778542301332285*^9}, {3.778542364520212*^9, 
   3.7785423785701556`*^9}, {3.7785424188619113`*^9, 3.778542587652295*^9}, {
   3.778542635323486*^9, 3.778542667359767*^9}, {3.778542717012483*^9, 
   3.7785427528399153`*^9}, {3.778542808044863*^9, 3.7785428352021723`*^9}, 
   3.7785430472771626`*^9, {3.778543101451866*^9, 3.7785431040589485`*^9}, {
   3.7785431827533817`*^9, 3.7785433016109505`*^9}, {3.7785433655170603`*^9, 
   3.7785433754363747`*^9}, {3.7785434387932835`*^9, 3.778543520528959*^9}, {
   3.7785435571219535`*^9, 3.77854362253572*^9}, {3.778561263523823*^9, 
   3.7785613236706195`*^9}, {3.7785613696545444`*^9, 
   3.7785614964441853`*^9}, {3.778561600566514*^9, 3.7785616639883585`*^9}, {
   3.7785617053790927`*^9, 3.778561708327135*^9}, {3.7785617668941755`*^9, 
   3.778561780100622*^9}, {3.7785618127531576`*^9, 3.7785618588596034`*^9}, 
   3.7785618947285256`*^9, {3.7785622036026917`*^9, 3.7785623411133947`*^9}, {
   3.778562448689375*^9, 3.778562448922694*^9}, {3.7785626093982697`*^9, 
   3.7785626260565367`*^9}, {3.778562662640073*^9, 3.778562665097229*^9}, {
   3.7785627443908896`*^9, 3.77856274447666*^9}, {3.7785630223877487`*^9, 
   3.7785630405551553`*^9}, {3.778563161052726*^9, 3.7785631823023567`*^9}, {
   3.7785634189702654`*^9, 3.778563424953267*^9}, 3.778563457424176*^9, 
   3.7785636700481815`*^9, {3.7785651418522005`*^9, 3.7785651457340155`*^9}, {
   3.778565500164981*^9, 3.7785655161847506`*^9}, {3.7785655630185432`*^9, 
   3.7785655996379375`*^9}, {3.7785656324035263`*^9, 3.778565641769164*^9}, {
   3.7785656852619915`*^9, 3.778565716071273*^9}, {3.778565746972584*^9, 
   3.7785657508342457`*^9}, {3.7785658032002673`*^9, 
   3.7785658308733625`*^9}, {3.7785658874650793`*^9, 3.778565923362977*^9}, {
   3.7785659574788218`*^9, 3.7785659676476936`*^9}, {3.778566025401816*^9, 
   3.778566030851386*^9}, {3.778566067420454*^9, 3.778566088216837*^9}, {
   3.77856613344232*^9, 3.7785661339409857`*^9}, {3.778566200693427*^9, 
   3.778566255222578*^9}, {3.77856628594312*^9, 3.778566360057955*^9}, {
   3.778566475191057*^9, 3.778566475591753*^9}, {3.778573371613713*^9, 
   3.7785733837021246`*^9}, {3.7785734341847744`*^9, 
   3.7785734726536875`*^9}, {3.778573891184684*^9, 3.7785738914419937`*^9}, {
   3.778573938158105*^9, 3.7785739399823046`*^9}, {3.778596088714059*^9, 
   3.778596106966839*^9}, {3.7785961969545374`*^9, 3.778596227165122*^9}, 
   3.778596275461225*^9, {3.778690645484071*^9, 3.7786906604898167`*^9}, 
   3.778690739334095*^9, {3.778690900837556*^9, 3.7786909599067535`*^9}, {
   3.778691041827518*^9, 3.7786910967732773`*^9}, {3.778691155453085*^9, 
   3.778691192626068*^9}, {3.7786912306083593`*^9, 3.7786912360054617`*^9}, 
   3.778691555573386*^9, {3.7787307277592626`*^9, 3.7787308410149994`*^9}, {
   3.7787309676052084`*^9, 3.778730968373664*^9}, {3.7787310058587337`*^9, 
   3.778731024785022*^9}, {3.778731202474972*^9, 3.7787312120677986`*^9}, {
   3.7787312608512597`*^9, 3.7787312996973424`*^9}, {3.778731342642498*^9, 
   3.778731348000904*^9}, {3.7787945894249935`*^9, 3.7787947920292587`*^9}, {
   3.7787948288858347`*^9, 3.778794903406747*^9}, {3.7787956768185854`*^9, 
   3.7787958704597483`*^9}, {3.7787959250978084`*^9, 3.778796109930444*^9}, 
   3.7787962207148266`*^9, 3.7787962775104156`*^9, {3.7787963201511903`*^9, 
   3.7787963208583307`*^9}, {3.7787964302011967`*^9, 3.7787964687626605`*^9}, 
   3.778796545955674*^9, {3.779516710166432*^9, 3.7795167184753275`*^9}, {
   3.779516971922289*^9, 3.779516981517969*^9}, {3.779517032273305*^9, 
   3.779517033527219*^9}, {3.7795172622811317`*^9, 3.7795172623645077`*^9}, {
   3.779517381209735*^9, 3.779517406486121*^9}, {3.779517439157836*^9, 
   3.7795174394869905`*^9}, {3.7795174962608795`*^9, 3.779517496695755*^9}, {
   3.779517544264635*^9, 3.7795176573739195`*^9}, 3.779518015092608*^9, {
   3.7795181299431047`*^9, 3.7795181948445487`*^9}, {3.7795182670771008`*^9, 
   3.7795182698060675`*^9}, 3.779518369792425*^9, {3.779521286400552*^9, 
   3.7795212866538754`*^9}, {3.7795214713398004`*^9, 3.77952153460441*^9}, {
   3.7795371146171865`*^9, 3.7795371785524063`*^9}, {3.779537307117817*^9, 
   3.7795373352418404`*^9}, {3.7795374572406716`*^9, 3.7795375334165487`*^9}, 
   3.779537566234141*^9, {3.779537628195345*^9, 3.7795377244209433`*^9}, {
   3.779537800396841*^9, 3.7795378345826807`*^9}, 3.7795378794364004`*^9, {
   3.779538657046362*^9, 3.779538659947793*^9}, {3.779538695662599*^9, 
   3.7795386961901417`*^9}, {3.7795387685666585`*^9, 
   3.7795387982941127`*^9}, {3.779538875244466*^9, 3.779538882043932*^9}, {
   3.7795389923290615`*^9, 3.779538995577095*^9}, {3.779539031246167*^9, 
   3.779539036777837*^9}, 3.779539088731888*^9, {3.779539139854162*^9, 
   3.7795391462099233`*^9}, {3.7795392434914584`*^9, 
   3.7795394539473963`*^9}, {3.7795395281126175`*^9, 3.779539600027306*^9}, {
   3.779539784969158*^9, 3.7795397894553633`*^9}, {3.7795431520951495`*^9, 
   3.7795431867560616`*^9}, {3.7795432782411923`*^9, 
   3.7795432855334835`*^9}, {3.779543410835673*^9, 3.779543575192922*^9}, {
   3.779543611732192*^9, 3.7795436120573616`*^9}, {3.779543672475713*^9, 
   3.779543736588512*^9}, 3.7795439180527763`*^9, {3.779544041115554*^9, 
   3.7795440413778496`*^9}, {3.77954452487702*^9, 3.7795445424104795`*^9}, {
   3.779544797615017*^9, 3.7795447991022663`*^9}, {3.7795449181826515`*^9, 
   3.7795449215266504`*^9}, {3.77954497483066*^9, 3.7795449974939594`*^9}, {
   3.7795451679749684`*^9, 3.7795452095243864`*^9}, {3.7795452923445315`*^9, 
   3.779545316750186*^9}, {3.7795453623662624`*^9, 3.7795453627820272`*^9}, {
   3.779545396725032*^9, 3.779545407951479*^9}, {3.7795454438479123`*^9, 
   3.779545511256974*^9}, {3.7795456001684823`*^9, 3.779545748459195*^9}, {
   3.7795458337667284`*^9, 3.779545873780727*^9}, {3.7795459059932947`*^9, 
   3.779545906239219*^9}, {3.7795459829617167`*^9, 3.7795459890056643`*^9}, {
   3.7795460366743317`*^9, 3.7795460530443068`*^9}, {3.7795461453799443`*^9, 
   3.7795461512762437`*^9}, {3.7795468000730495`*^9, 
   3.7795468065526505`*^9}, {3.779547321133567*^9, 3.7795473682254295`*^9}, 
   3.7795476020515976`*^9, {3.7796016251565714`*^9, 3.7796016367710104`*^9}, {
   3.7796199328059196`*^9, 3.7796199352897854`*^9}, {3.779676167624013*^9, 
   3.779676193583165*^9}, {3.7796838511868124`*^9, 3.779683851376306*^9}, {
   3.7796838981595616`*^9, 3.779683898429874*^9}, {3.7796841454193196`*^9, 
   3.7796841523724613`*^9}, {3.7796842549414296`*^9, 3.779684260878535*^9}, {
   3.779722675652008*^9, 3.779722677734348*^9}, {3.781431846462696*^9, 
   3.781431876078333*^9}, {3.781435701188771*^9, 3.7814357110163555`*^9}, {
   3.781435834696801*^9, 3.7814360506373615`*^9}, {3.7814364059753695`*^9, 
   3.781436450054514*^9}, {3.7814366366751356`*^9, 3.7814366427795715`*^9}, {
   3.7814373591415796`*^9, 3.78143740182691*^9}, {3.781437468627757*^9, 
   3.781437599863906*^9}, {3.7814378250958543`*^9, 3.781437852287028*^9}, 
   3.7814380911419196`*^9, {3.781438281800251*^9, 3.781438283801761*^9}, {
   3.781438462092656*^9, 3.7814385070624332`*^9}, 3.7814387417870297`*^9, {
   3.78143877351432*^9, 3.781438814135851*^9}, {3.7814390369158535`*^9, 
   3.7814390376419077`*^9}, 3.7814390798259797`*^9, {3.7814391286868095`*^9, 
   3.781439135279927*^9}, 3.7814393415335107`*^9, {3.7814444895167274`*^9, 
   3.781444562726903*^9}, {3.7814447152076364`*^9, 3.781444736777958*^9}, 
   3.781444945090105*^9, {3.781445253202276*^9, 3.7814452574919257`*^9}, {
   3.7814456309133987`*^9, 3.781445658589445*^9}, {3.7814457036750746`*^9, 
   3.781445708891802*^9}, {3.7814462332001743`*^9, 3.7814462653877215`*^9}, {
   3.7814466007497997`*^9, 3.7814466028950224`*^9}, 3.7814469360842004`*^9, {
   3.781447004763955*^9, 3.781447011743669*^9}, 3.7814474828712826`*^9, {
   3.781447574450715*^9, 
   3.7814475781768956`*^9}},ExpressionUUID->"86437e81-5544-440c-81ae-\
c9e12f3593e6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwV13c8lV8YAHBJsiuyktk0SlSIOE8yUwolSVYRMrKuzTVD7nCNn4qijMpK
KjQklVHZIdKw3fsaKTvpd/rL5/u573XPe55xniPr6GXuxM7GxvZhFRvbv7/l
lsuzE8WLOoM6HopnJDpRQp1ttxm1G0XJJc0Mbu9E9N6oECnqKKoxLhX2Vu1E
qUOpTRzUefR8urKVYdyJ0plZc/OUtZDm2CUzH9CJRN3lrk5TRGHmBAfpdGcn
Ol184dQkZQe4s7yk6hldaL4p9uk4RR0aetNrO0U+ofKNbfxxV41AZDCNYunz
GV1W3Nf6QsscBNN4pidTviIRw/nURiEr6CjhdA9u/I5+vRB1u+1mC80/rDNi
LAdQrJ2U2H8KjvC3YtWevw8GURHFLvqwnRM4hZgIW3MPI4kgG/eFGBc4lXw4
fNOBEVRw73NTnN8lEIvYMtC/bxQ1X0moCLnjCc8VH+aMbhlDiZ19fNuaL0ND
s76159AYan3bHrr+sA9cuvlxH8Qx0fjS7XlHYx9olRe5WRfPRFx7fH0eH/eB
pjXF6iZXmejQdSEXaxsfmJBJWDGlM9FDz5MWuf4+IMzXMAHXmShNtEte4y5+
/qM+s7mYiaxde7rs+H0h2UNCMKODiYb4vu8p7faFjtLnF9dsYqFEgxzbtC++
0FvQ670owUIqZMekkEFfWFd3WGBckoXCfw2NGk75QlrFXrYmWRYS62Xe/M7p
Bw/U9nwKk2ehYwW/+ATV/GCk+mXnDQ0WenJoLdMv1Q92dOhPfTjFQldIu3M0
zfzBHEJfyCWxUDw/W+at0/7g/VPk7AAF/35uWzqHrT8E6771y6axELXdL6nZ
zR8mTmyXFkthobTdzwIcY/whDwLOz15joTsjhqaJFf4gTe7WdylgoZeWDr97
JEmwyD5rsO8VC9VMqM7pbCUBL9Wy+k0tC9XGcEzfUSDB/K3eeos3LFT3sGDE
Q50E97rZUz3qWahJYLJtlRkJTol2baE3sdDnuuC78jEkcHAWq0ruYaF5tdRT
QSwShJKWPa7+YCE/fQeHmh8kmF7tsjA2zUI/LHZ7rJ0nAc10QE3/FwuNXW6I
SVsdAJ4Vke2LsyzUe3+5vGxzAPwp/5Rm8ZuFnks5CbJMA2AAVXc3riFQJKda
i3V5AChxj6W9FSfQysbVn3OqAqD5j8bHpU0ECt7SOjL2MgD85DV6d28mkA+4
rZA+BADb1F2UIkWgC8E3d6UMB0ChskzksS0EMpjkTHovGgiHSNsvxCsRiLer
2+hgaCDoKSU0S+gQSJCZtlY0KhAieAWZYohAYssWddNXAmFI6gyHMBBou1zr
4YKUQEizXIV4dAkEng06goWBUNDS1DamTyA/zqp9Yz2BIMJO6iQdI1Cf2nWZ
VPUguHJ0gdJzlkADxlbfPLWDwC4uL6/ChkBMG5GbxoeDYL9a7YfUcwSai2JI
/DUNgrYWYZOjdgRa35Io4uYcBIkTpRsfOBJI/2IIH6QFwahIGDJxJVDJfzYL
xM8gcN1ayN3hj5/nUozRXwyC8ynqqrkkvB+Bi+tu/Q2Ck/a2J/wCCLT/TPoO
c75g4OAo8toQRKDnm1otK7cFw8bbycYolEDvsg4/jrEKBmc1mSHXKAKN3FHw
kawOBnm+TP8VCoGMNi7+Ib0JhrUhHOdKqQS6H1Of0PouGHb2bTGxoxHIw+lC
TnR3MHjaZWo/pxNoZvvNVuaPYJCNXkpwSyEQ+/0Nyk+2hMC3yqG91zIIJPVg
gTBNCIG84Pc2urcJxLOtUuEgLQQM63LOvMeeuxbgKp8WAiZurlct7hCoOXpu
ZHVOCCRGXaQ55BIo/PRMf2Ul/r6e2Va/fAJ9XZnqlhsLgVKloV7f+wS6eWz0
9ZxBKOS9eq35vYxAibX57ENHQ0F+871rJx4SiKTufKjNPBQOp3Nq1mCbyg5X
F9qGQst4KWSV43ybGaiyJ4XCqOa5y6aPCWSb+bX0XV4opDXkFlMqCSRJdN64
yREGJ/2ytaKqcb69yCvg4Q0D/uag6QHsIpp/OWlDGNzadaNT9yWBNPcJvzeV
CgM1wyQFthoCWYadXFpRDwPxL/NC3q8IRF/XYWV3KQyifWqOKL0hUHf/7Qvv
vcMgfPtbCTK21COfy+qBYSCvai7XgV1sJRi/LjYMLkw3tZHe4vjlmFW8vBkG
lcXP6x7VEYhjX6uwTHsY7NYwucTbSCATzmzZpE9h0FA31miOzfjktWvhaxhc
aRdzuoYtG7ZOv5UIg4prhPnWdwTSqTP1I68Jh70DnmIq7wkUYNXU/l0jHPZ/
7Lq/vYlA1QpZX4+icBAPluZ0xOb8486q1A8HIqMlNxM7NYePPdk8HHxPbixZ
10ygBywTlUPu4fDh58jvcWxW6Dtazq1wsPWv6Y9pxftVl1Y0lRcOhpuCG8qx
Pdc7NGoXhcOFHe//9mNP35ln760Mh2Onqh0OthFo4d1WkmB7OIjcvP9nDPvp
xh8M+0/hoOwz4CvYTqBQ22elJV/DYUNGrbYW9t9pM+YRAruVrTkRm1M8wiaa
IwIGQvkJ2Q4CNTgeCWrjiYCUMlluA+zEIuF06Q0RcMN1MMwVmx+KWp5JRoBc
wqR7CfbGiz26M2oRYHo55dKejwTqepBrp6sdAbmTMcbHsTOWvELphyNg5apk
pAe2BJXzidKJCPge92KlAFvu8V55J9cIkNdh0xHuJNDQyop+uVcEGJf7/tqN
nW/0znEVKQJ4PEPXGGHL99lnZkVFgKTLKwjEZm1TqiLiI+DM+go3GnaR13zn
AVoEFLQ++pmHvWc1dV3XjQj4GHxAqg3759EzSltvR0CkU2DtMPaj9K3GPncj
QNpNuW4RW13hWZTA4wj4/dF3QroLx99sbNagOQKM2I+/vYDNdqNcMO1jBNS+
NvLyw64dClce7I2Al7qMkGhs/UBh14jRCHj8N/T5LWzO2u+xTRMRcEewfboI
u4G36LbETARoU74mVmHnH5edPMtGBhlyNLMV+8pM3HLUajK89Ggu/Yztcm2c
5z4nGc6V7P88jG2sYy7exk2GYQFB9ylshcGKHQt8ZGhWee64gM0bL6kmvZ4M
ZUlJL9m6CTSuFK1nIESGcbfPUVzYH9rGzD1EyBBCsBWvwy4mmTqkipPBif2U
jgh2R5aScexmMsi9su2UwF58w6NCkiaD2InlURls6fExsYtyZMh+6Efahq0v
VM9mtY0M0e8FIuWxL2nmjRntJEO3zQauXdjJDtGtBxTJsIHrNe8e7Ip4h0qF
3fj7pm5JqthfSlG2hAoZ2ujHEvdhr+6WjOfbR4Y168rXqGHLr/z2+qNGBlHm
95V/Pr6t9/TkATI0SUmS1LH9j1aibwfJ4EIrvvTPN3zTd7QiMowsdn/79/yr
637rXumS4d6f/vb92KOvzOfL9MkwJ7ZB/9/v8TP3fLttRAaDwvtq/9azd/26
+hQTMnz/+atAGfuM+kRJjCkZNq1TvaaEHWH7Pt3fjAxnV+7x/HvfvNh74c4n
yaCWnb28Fft90RXn06fJ4Fdu7fVvv6Y7nEyNrMnQ2L35/L/9FP19WO3AOTL0
Jil+EsbWlpOTUrAnwxPV983/4nHemI1T4jwZ+rnBkBs74fLXCV5nMsjvbT7E
jt1Zff3FxCUyWDkYVP/E8f49HJj31ZMMz3gqgYUty3+a0uJNBrqpuUE/tsdZ
oXNlAWR4mCrQ14SdEjWtdzuYDLFQ4f4au+pei1JKGBlWetIiK7HXLFxd9osm
Q2Yr24EcbEVptyGnODI4fBXsS8U2MzD6YJmA13/AmSMeOyuVI1ODRoaq4d5h
d+zXzwai5Rk4fyfJt2yxmQM1lzalkSH3ife349j7VcK0lq+T4Ue21q892E1N
s70v88lw/M9t7wlcf79mOmof3CMDabrtwmds8c0P7+cUkSHxjdX3BmwnN8/g
6IdkqLHw8b6N/YdzVNywmgwZSePsJ7B3wSer5k4ytKtaSqTh/sKWrlOw8okM
WWZqCUHYH4nc2d19eL3mSl7nsEP/82bQBnC+i2XmbsF+N8nz4cQUGdSvnKi+
h/ubc5Y26uCKhEtxT35m4n6p+esOZTVfJBT+slsbhM1vzNO3d10kOJwSvnYS
+9FMV2CqcCTo/P68jwd79dHLD0/JRcKimZWlF+7P2Uu3t33SioSd96/EyOJ+
7neC248LRYL7MWXqbAuBDPO9ajV0I2GXXJl4I/ak2UG7a0aR4JjhXeGJrX2v
M8P6VCTwt8mIPMLnR+9pLr4vnpGg6pSSswOfN0KPPX7250TCjdJPv8rxeaZE
ObqpLzcSlDI+VIZi6zkp6nYVRMKZuFei+tgkYWbyu+JI+KCSlvuxgUCf/C+o
lFdFwrHvSmxT9Xh+UDt7OaYtEtLl+KbX4/NUodJocvuqKOgSdDnMW0ugw/Qd
IrIcUTA5qfmkHp/fNi6cOhJro6Chdv27aGyK2BvKOv4oCKXf7FzC5/2PQLRr
QSwKHpbuihrC88CTA2rujXuigMmz2T7/BYEOPdvCumQfBcYqbLeH8Xwhepy8
6fT5KNgxmKWQgT0x0HdE1zkKEk4Z2B7BvsaTXijmHgW1CoH1xRW43s5webwN
iILferfyLz8hUM7C+JQULQoU5EpejeB5ZpXak9m2F1Eg5FtfnlaC+8MDo1Ua
EtHww+bCFS48X+n57spwlIoGncrI3zfx/NWwX1CZIhsNDmfWiu/Hbn362WZg
RzSoFm4zs8/B89Ybz8qkfdHwbfHWs4e3CLT0KdWr/1g0vLjz9K5hJoH2rer/
kkiOhpF3x0/vTSNQgVnQ0y/D0SC5a7+JZByu5+h3bYu3YyCy7ZXTlDOB3Bx2
XJ3yioXdv7LsDx3C9bb71/kdB+JAT8Z7aEoM95+kb9c7Z+Kg55Rkexe+b2xM
7/Y9V3MF6Pxv7cVf4/vGnh/3z4bHQynXQnZhOgtJPQtYlamRAIfYSoW6XFmo
/AfP0mP2RLhoWti0Fd/HaBXVJwxeJoKrE899LW4WapcPN35w9SpsOXSyJ7SL
iWx22WbTjyTBDblguu1dJtrpqq4QdiwJJL5EFJUUMNGv3PWPXE8kgcz5/uWV
fCZK3Py6XtcyCawnXmtn5zFRJe/OqRmHJDiqN3xq+DYTCbGmtc8EJYFG2lx6
cBYTvcuP/Sx7Nwn8yzzvdTOYKH3A1kmgMAm+h5H+KGM7SGlMLRUnQfyRhDvx
yUy0kMZi/1ieBPNHbVia+H67Pfa4QtzLJDD1OBt9h8JEkefFg1hdSVDDTJiJ
xfdjDZlikfI1FFBZuHTwWjgTlSUKrP3GRYF1v45pTIcxkcKs1zwPHwU2a7A1
GmNvfqf6yVGQApk9IWXLIUzE5ld5TVCaAr7Oi32uQUzUWP96s48GBSSeed09
74fvz169ciqXKHCiBwRG3Zioo0dL6JwnBX6nZrpaYh/Vy1qd4E2BGAX7kjpX
JtIRtx/6HkABJeEVtvsuTCT3ejiPHkOBtTEvtoc6MxFLZHrnjywK3HQM8jNz
ZKLzkebim3MokL13/nerAxP1EeXcRrkUWDbIyjXDbq4hsW7dp8ClN9dcLO3x
fd9tufB4BQXySjt2eNoyUUj1WuXSVgpEm/Ny9FozkWZh/0JuBwXCegQK/bAX
/ntWe72LAkscsnHrsf28vSzj+iggMhI0YnKGidy3doedG6MAZ6JpedtpvF8b
ygwtCApw+U6fI2GP/UncYDxJgWe1u89sxnbq1snbN0OBqxz8J9wtmcg2Mf8D
LxsVHAI35m8+hfc3gJy+ajUVRngVD344yUS9563t59dQIVz3KIRhW2oLzAzw
UoHhnJgzaMFEx3/4SzwVpYKpHP+eWnMmEvhyfLh0ExW+/om5GYb9oVG+NE+S
CntGnmVoYhvd+aKbvIUKp6V2oiozJgJLfTcXZSpQBiOfNp5gohVd6X22qlQQ
To+bSMZ+rrz4x2I/Xt9Zx8az2BrcxclIiwruQi8TZo4z0dxs3Nn9OlTQa9Hy
f439aMB+m+IhKiR3xIqmYqs831glYkgFUvAGqib2j7uTUXxHqJBv/ddlPXZJ
WsNR9mNU8HfbwDVmivfPK/T7hDl+X4rXrUzssbOW9wdPUaHo4kpWEHa+0R6/
HisqoNF9HlbYcnJDa9/aUmHFzD1BAvu7QHXbUwcqiCrL9/09xkQ3f/9348EF
KmxsXc07gm0z5u2Uf5EK9mp3xZqxJTpNlDPdqCB+umhtJXbvq22LyR5U4Dem
9d7Bzij5W3vlMhXW1VSkJGNb3uhJCvOlgqua7/5I7I3x5Za+JCoM98y88sFu
96PIuAZRYfuChZYzNt3hIss2lAqa44l3zmKbmh56dDKCCg+FScvm2HxaEuFH
oqjApd1ueBT73Y5ZQ4ilgkCk1hVD7PiNLRvU4qkQxav0XA/bYNW9z4pXqaB6
YWn0MPaayag8WSoVPqR94tXHvsw93GmZjOMf6xFlhN231ZAzKRV//sXExBTb
CO6pvfqPCrIqZy9aYj86y3tx7joVpByMuu2xZQI8/lO8SQVL0egbHthJjJZ6
+xwq/GE7+CgUe6FYZSEtlwoWQo6yVOwLjSk73xdQweV19kAOduvQrBVbIRW6
Xc7NV2AfZLNK2F9ChS3Sj21bse9KPK1yK8OfawaLEthC6ptZtx5RIe2yqgwX
jl+4efimzgoqCK3bGLADm+Xx/QjPMyoIPly9yRi7Nje30O8VFcbFlg6kYO+u
4ey794YK190ky55hX//swvetngrqOtEuI9jegrs8jJvxfozYxuvifOvbRcsK
b6OC98LaMV9sI+PppvKPOD7Vp0gF2DLkx7ulPlMh/dxPLmGc70k3RO0svlLB
aeXwquPYC0+CaPH9VFh6o7X+KnbLhPaPn6NUiNPxPcWN6yn8bF1Z/QzO7/3n
b0jiemORdg4sz1PBQOeQ20VsS0aioOpvKgw25/OUY+9qNPXNXEWD+7euph7H
9dyn1r3PW4AG8fbd5Exc75qCYxWbdtJgSI+7Kgj3j7kG7mqPszTQqOAsrD/H
RNLZzLkUWxq4qBcHKuJ+ZhTQqPzUgQau8mu6qNjXtyXkcLrQIKeap9/CDvfX
KK7YW340qHm5kvoR98OLZ8ZevA2gQTlPpY4q7pf0PQ1zRDANMrozHlOxB75e
cdGIpMGdR7P5h3G/jdNae7SNQgMJnoHe6+eZqFRwNGaeTgPWsqvKOPYnZt0L
yVQamF4Sp2hdwPWcEafsdp0G679xTHdgW3g5u9CzaFBRr9iw2YmJQg0Mcp5k
0+Cu+Tnd89jNM2uEVhfQ4GDP+Msx7Pn3wyby92kgIjuTsgP3f5k7b2OOF9Mg
dsGp6Dy2cXDeC/8HNFj5efpnJraPWezcjXIaGKZrHO/AvrHTSbn2CQ1U7nYW
cV5kojd/9VzGqmhgkeU4q4YtWsLRu6+GBnHFmj8p2BA7JHj2NQ363aTDHmG7
2bwxiayjgf4n1exu7JS9uTEFjTR48/WP4Tz2c56YF00faMBZkuwghM+r4f7z
c79aaBD2PKlXEVug6rDypg4a8A1L5wC2On2LC3TRYHpFMNcM2/7i6hznHhp8
PdHYboudoDPYk9RHg6kefUkX7IfCrwXLv9GgREfZzwP78/htk54BvL7wjgZP
bI43UTF/h2mQ4KrI746964bji21MGhDNX/Y6YVv66M6ZjOP4nNTdY40dYSyn
7DNFgzbRC3NHsO/KsLtk/KRB6tzqEHXstvn+7OpZGmTdu14ujb3U/KpnaIEG
ZfbW6auxt+TnCPIu4/gZ7dk0iN//aFikicpfGhwpe6tWja15f0+t4io6LL0m
D6Vit6Rlf61mpwNzf+zmi9gXItf/NuOgw07vR5/2YS+4k0WH19BhJqNYaAXH
K8nqx97AtXSo1m5qqMWW1bM/wctNB6F0pZko7CfKre43eejwdySboYN9RAIS
VPjo0C7+NGcW58tXzgd5b/jp0BX5Svoutu9P6drT6+igu6aS1xI7s/HvUpgg
HQZ62Hbl/svHOUWOOSE6XEt1nT+CzbPFit9TmA5H1Xa+m8D5HBj6QNpWjA5S
FuP0HdjK9/p2donT4chx88RqXA8jnVyqphJ0KAx7l/5vHjmp7KCnI0UHzrjZ
hUu4fnhtKMeeSNNhMbDl9C9cb7XxVZa7ZelA0uXoI2HvGdjgKrWVDulw7ZIP
rk/+tFrKijwdtD0H7Q7i+n7zajKdpEiHmpaJm3k2uF4mN2VPKtHB3vyxFi82
y9D34VdlOkzMkMre4/mkbmlLd/V+OoBdVoqcFe5H9rEyEYfo4JzGfVAF95v9
lDL5eV06fJn7+PcC7lfjVV9UvfToIEujvUvD/cxaSE3fzpAO3Fuj8yZx/1Sv
G3FFx+gQr1n+PtwEn9+KRuV/rXB8Mha/bdHD8+c8jwH5Mh3EE36E9+xlIk+t
EHYxH/z75eqCpap4vRFEdakv/v/aevNRKvg8XftB/RuJDr5iFlPblPF5IUqR
1wmjQ9V7P3FrBSZCGuv4lxPo0KGUVxsnw0SSQUIfA+7QYdwreeoQHxP1LEk4
enXRod+iQHLT4BiaNdAuvrY/GSpOLnHsvT6GnvKIcA0zkuGP1aDXKusxpJo7
s1dyIRmm201seCXGkGncIJVuyYB05cmrLUOjyPAI9aiaFQNkneS0hgdHEQgc
4Ok7wwCParGdvwdGkUo6NXbHOQZ0nVzzdEf/KNqYfyC0+jwD7t3gfxz9ZRR9
fktzHb/MgAfTdq8NukaRy5qDekZXGWBZX681Xz+KHBpHVk0mMUBTinv9Rmxr
SvLLFCoDUjf+EFOpG0VHhUc1vyUzwLO9pP7Sm1GkvI2hQspggNMfAcZgzSia
0xuTys1jgM3ez7l9VaNoiiulz7iAAX7eEfnLlaNo7IP29am7DDgnzN6zGbvn
ZIqwVhEDOr1etpx7MoqeX9Dha3/IAKmMNSv9D0fR453MxoBHDODoiSSvxi4Z
T7ki+YQBIepbVLeVjaJsPya7axUDEnvZ5FxLR9E1jdQagWcMkKzqsLtaMooY
yzrhj54zQPTw4vvi4lGUWMPUsq5mwJd6befWolEUHZO6+Pclfp/rHrt/FY6i
/wGn+Eh0
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2102#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]], 
          LineBox[CompressedData["
1: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
0IzOUnD//x+u9GN2
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2293#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwV13k8VF8bAPDsspYiS1na7CGyZDlPSimSSrJlKUoIP/tYhxnKPjOhUkQR
lUhU2ksRUqjssg4zF4mshbzn/YfP93Pv3LM/53kUTvsd8+BctWrVKP7z//8V
tkuzPx/8Mck74K1qL9OKEmud24+mtSNnocexQ9tbEa0rLkI2jYWmYJOm/85W
lMHM+MydNo/MvDZx0w+2oiwiZ24+lQ94/qUGTIe2og0+m5OnUjeAj8rvQ0da
W9HJB+4nJlIV4Ve4aEsZow3Nf45/Pp6qB59F+7z8JTpQxfoW4YRkc0isePgx
168b+avqNL8yPAY904ymrOReJHFgPqN+nR0Ibb6dZva2H02/2uB1y8sZXp+o
auncN4jiXWQlr6ichrMNQn4RGUOoJNWFstfFA9hX1wuv/GAiGZKTzwLVE8o7
t54/szSMiu52f04I8galMiPD7uER9OVi4tOI277gsZAiJP2GhRzNxaacy3yh
hSs/cVU1C7H5r6uYvvCFZgdjieEPLMSZVJLD/80XflgGuxY3sJBuShMlk9MP
Gi5m12xoY6GbNHHrMjc/KFh20s0eZ6GqRuugKVF/aDi7MqkpyUZJrT1C2774
g6Z1FP3teTayeHDj+cI3f+gxngza7MNGQvFOno2d/hBqXXEtzpeN0nR63gcO
+4OrnE+hcSAbXb7cHV695A91s33tuZFsdONoF9tF9T/Iqx8UEElnowef2z9k
X/oPsv6K/bn1iI2aa75GrtkbAMoKYVNvZ9ho/O+t+dMHAyA+RkJ9YI6N+DUD
Ax4fCYDR97kRKwtstCd7naeDE35feuak7jIbPfK1OV4QHAAGXO8lUnkIlLmh
TVm/OAA6+Xl29IkTyOF8Z5uLcCA4hxRcktpFoJDcu0cfrQsEYsus1bIugRjf
SI3c0oEgscl6d58+gT4ZS1ff3R4Ih7u2x+UYEchIzPHBNAoEnwFTJtc+Asm9
6KFcDAiE8Hh3l7BjBGIK9WuWtQfCgNH6YC5fAiXtz3fO/BEI8af43Wh+BNIi
n06JGAqEtnijlzL/ESh6msk68CsQjoc9eaceRCDJLiK3nzcI7mdwiaFwAh0u
mhYS0w0CmuMWkQ0JBHqyh48IygiC+TrHiNwbBHKKqJNwzA6CKwe2M//kEIjr
ceK+PXlBcFtFt+b4TQJZKwnlCZcEwSkzgSnOWwQaFVl78s77IFB0vTRrVUQg
2R7pmvbfQRByldKbU06giyE78ncfDYaqi+IOkjUEuiS86sbNk8FQpGms4lSL
x1PQksXtHAz/0ee1cz8SKO1rUMoXr2A4nhA7s7EBz/eOF6GnqcFQcJpLjaeJ
QLdHDlglPQ0Gae8n0eQOAr2xdVvs3BQCbis9KZtHCfT25845k60hMKPgcll9
jEDVVO6p2yoh8ODg+q+64wSqfVQ0ckEvBLqYML93gkCfRSZaOI6GwEdPuS7z
3wTqrg0vVqaGwOGVj++X/hBoXjfjBGk0BFb2ProowD+Kgszc3N5O4vZUtsl3
YE8e33GBbz4EXt2rmbm9ehSx/euomVyhYJkobq0rOIq67i1VlG8MhZTQJy/N
REbRS1kPsVGrUJhQ2vFFZP0o0lffKat1IhQ8+gLb3mBXGq4ohzmGQsZTIVE/
8VH0wO7aHl7PUOgdvylcJzGKchmf/TfHhsKBdYLb3aVGUSyvbpNDRSjIUUv7
98qOon/rubrzn4XCv5SM0Hbs8C3NI+w3obDRkm/HeblRFABe/0IaQ+G+aPZM
gvwocg/PVb88HAqupoc+3N88ivoveRt0jYXCik6mtuaWUeR0Rd9M4XcolL9o
e/oI+0TlV6eyf6FgcTn4T/nWUbR/gjfl04YwMJZW1Lu2fRRVL327IiYbBjRv
+60iiqPIRDD/tv3WMHisYygdi62nZPiCpRkGhLWzlJvSKFI67TfKdSgMYtXv
6qxWGUUF/kZzh6zDwMhzrZ4vtkLMak6GbRhY5/7TbsGWvnFbSv5MGEQZPBWn
q44iwbZ2c6PIMNgjMAILaqNIjMjk2xAXBn21n40OqI8iyaXjtVMXw+BM81XP
DOztm5v3Fl0OAz+Px+bKO0aR2q40zrhrYRAmduaPP7a2ueU7p5thwJQp+foE
G3zrTMTuh8HQuZB5Iw083tiE5fGHYWCTuQFFYR/O2Pfy45MwWFd/uegFtsPz
twZR1WHwN473205NvF94n+mwO3F/VH3tBbTwekiFTlf3hUHNqqcXDLFj1XY9
yhkOg1bURvfCTjtWrnF8Kgyibwaseo+d4eE3oT4fBgbX9u8fx74epv6AfzkM
NE/lMtbtHEXFuXdVXvOTQPigwi4n7NLyc8RVERLcu2+XEIX9+MO24sD1JLi0
Vu37DeyX7UNnraRJsNls9cbn2NWj+duU5UkwImTj2Ipdt+zC5NpOgib5s+kT
2E1rZG/3qpKgczztMY/2KGrb0uP2TIsEhxPWfZLG7tHNls/QI0Gc547P6tiD
B+36fI1JYBcm+swEm3CSyD24lwTfH3QnH8ae9PvutPUgCWI3PjB1wJ6LY8is
WJFg7BGjyx17KdO6q9OGBJLradYXsLnuilyrdCCBYEROfiC2wMvGk+muJOC6
WNQQir2mKUnC6ywJuGXS60jYEoPmrft8SLBFW/nq/71pljdDLoAEBypNdP//
/lb+mmN/Q0nAfzDlZgC2igxlbWsUCWa1qpu9sbV27Gkuo5DgthS19jS2/p6V
tKREEjiMe0adxDaxeXXYI50E++//nTqIbXYuQggySRCg/UR+N7ZluMEn6ev4
+5sEeZWwj6XOJ87mkeAExTF3HbZ93mPz5jskGB5ZHF7C8+taEch3v4QE37p3
dg5hn63Vqo1/RIL/5vSD6rAvdP6iulaRgJOhX3EPO3zFm1PiAwlsIF7YE5ss
pvJush7Pn3iv/F7si9vYMZ+aSDBJOlAng51h4b5M7iZBldKr6hq8f7KdN790
HCCB7G5H4SvY+f/1h+uy8Potq3V7YJdecVoY+00C//C+iUW8f9fwq1LN/uD1
jA2A19gBYX9Eb66QoKzVNz0Ke5d9luIxoXAwKv8hPI33f1a9e8V9sXBgaWhp
3cVeMNBGPFLhMGBaZuCE/VK62bZqWzhcqu3pr8LnSzY5d3CtWjik7iwMOI1N
XvTx9d4ZDgmk+iZ+7L09qxNkUTh8KtZtscDntyFn72OqXTiU1m/ecQ+ffzUR
sT29zuFAfrZiZ4CdFt3fqOcRDmNtlyRqcLw46hLFHP0vHJqlt6h+VR5FHfJP
1x1NDofCtU6973A82k2Pv3mPHg6b+yze62Df4LBR5b4aDq1ZH/7exvHMZXDS
9GlBOFz+1m4Sum0UjdxWCdj0OhzyX1dunsTx0nz9n+WQD+GwagdHwT7se9SP
ic0N4eCeY6+RqYDXz8M9n9KOxy8Nxio43s5sz20mJsNhi8K/jVs2jSLbKz5O
e+fDYf58bZvtxlFUxWfIvrEcDoH5DeYJMqMogt2+ckQgApTV85U7cLznvLdW
48mWCOCg/s7fj+8Dd+n+56IqEVBwauugLb4vapNK95/XjACbGI/o0/g+SfS2
cN5oHAFeDg+veYvh9VSPT42zxS7ymN+L7yPZhwtjVokRIL04l87Bg8/XtioV
o/QIaBYQYrZx4fN5LfS8cmYEdPaW+hZxjqIvlLkRrvwIOHPBYtZg1SiKPjkz
UFUVAeJpCc5bFgnk1Vghf+d1BIzMN/5rxven7Z5Al8sfIsDQ7LkPaYFAO1R/
91xojgAhuTHS81kC9f771b6ZHQGpA+8aFn8RqCGwTGLNRAR8UUo8FI3v5yds
3xPL0xFQdWff1sXx/+cHP7+2r+D5MAwqHiIIZHJn7HPKhkgA+Z/GvkMEyj3M
ej+3PxLkybpOjq04v6i+w8m0jISYmNCZiG84P9M7u6flWCTYbRr7kdlCICuF
4df3nSOBvWjq9Pgzgf7NDD5zDYkEn9fF3Pk4X3G+0VvWUBgJOYrcwdKVBDq0
Nnfi6f1IaMmrd/iI8xvdhFPqheWR8CLun4tPGYFE/HvuxbyKhMZdzNDcewR6
vberUKc1EuTiZG/n5RFo01jr9VzuKLi0izIkkEwg91eFRQKCUbAQ4Hzv90UC
laQHV4SsjYJhOYsHTVQC7dYR/2QlGwWb2MdXPKPxfEbZ/P2nFwXck4PcEjjf
o4l+s3PxjoJ7FK2pvTYEah+45f7pvygw7eT+EGiN87HKAH+9sChYbDp+/Iol
gfMJsUui8VHw9ssuu2c432zIP/r0TW4UvKDXLZ3VIRC3TrO4/NcoEFX0/OW4
lkAWvHkKKR1RkNlgr/FWCOezHX7qC734/eO7PDbwE0ghStSseSwKtKNsynP/
sZFJrVUQmScazp/qUls7xkahdp+/9utHw0PTgrn0d2w0GtmQnn8zGtwPiSt2
ebBRSW1mya/CaNg06eXBdmEj3zVu9cYl0bAU7Lr1lz0bTd2e5+yqioZvZ1Uq
WYfZaKFha4jY12jwOaXORd/FRrxSMU4U7hhoWr7uv5ObjepOHyK1CMTAubmk
wVX/WCipRDxLbm0MWOy/I9s8z0LCUNL0YlMMNLwJuB04xkLrz3WazujGQGFh
RMLgVxba/Fhb2eN8DKw0Lazw32Yh5r9/ZhV+MdByVsrMKIeF7pg3nOYIiQEN
1FAUeYWFlHtcb+TExUCXw9ZdSikspMmVJtp2PQboMt7lpiEs9NvSXm3rrRiY
KajaMO/PQpVZWw8GFMeANjk36Y03C+mpvIgTeRwD+1WnVtPcWMjkKHt2/5cY
8JX/AQesWGjV9QqxzO8xMO3xdqDiIAtVM6M1hrpiQB2O7jU0YyGzMPHzMawY
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
7P8B67uXRQ==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2349#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          LineBox[CompressedData["
1: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

           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2405#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          LineBox[CompressedData["
1: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
/vPfKxrwXLXWXC3KQP8Da547VA==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2461#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 1, 0]], 
          LineBox[CompressedData["
1:eJwV13k8lF8XAHCVkIoiElkqZYmSvcg5kUjql3aSUsiabezbYMa+jFHSQrTQ
IqkkbUgqRaRiLDOYYSYKKUIlvff9az7fz/PcO/eee+8591lx3HeP62whIaG5
c4SE/v97/8D0z+Hbv8w8RJ3X2iu0QvIrJ5ZdBgvSN/ev4a5pBUZnXIRSxmdI
aJaM8NJthdP9p98JZ0zCrzv7mYnbWyFnMG9iMl0UrbsvqvSGtMJS75Wp39OX
IvqNe6u2tsLB2y77R9LVkCGjlmvAbIPJd/THQ+lGKP5+49sjS9rh/pKWhQmp
1lhdZ5wa5dwFfmv13z8z2YP7hvNGbh7rBlmrydNvpA+hrgmsycjqhbFnSz0v
ezrhic/n7z0f4gL9qJLcWc3jmJ9b94cl1gdmLg1vPIyO48sfa7buXNgHE+6h
EaZbj2PEsqSY6sV94B7woZt75Diqp7a8Oy/fBzb0hGtaWcdxVbh4tZZWH0jc
GtGtnTyOW6qP3n+2qw9yJ6p2DtedwNbc2UnMrD4oST8ab3HUFT94mveJSPSD
Q+ycg51erug4D98XLe4HsaBiTf9QV3x5kNdoIdMPJxy/teRnueIP4RMTlOX9
IL82RuX3C1d8Mf5FulyzH5Lq85+VqbuhXOSRxmvb+sFlTvek4g83FOixdBwi
+0EhzNF7iuaONbeEbVR7+qE7iHetguGO/n9/jXVw+6EgwL2HctEdD74x0E7v
7wdVb8qe7/fdkaf98b+hwX7QOppm/IXnjg9/LHJLH+8HM8unwmz0wBFhf8fD
8/jgvHh5XvW0B449Yb3Q3MAHVYnLbVFinhinupSWrccHgbj6ItMlnviwP/bz
LwM+eArrx1eu9cTig1HnqzfxIWByh8ddB0+80lr4Yt1WPtA4EQZXKj2x91VN
5cUDfCi+0fUugeKF5V0WY0/C+KDiHFdoHuuFI/f1F4lF8iFXTiNoJt0Lo6ce
x9hF8yElMXh5cLEXLrRb7sCO44O362Iv104vPFGwQ+ZDKh90VliJbUVvjD3X
csosjw+Pc++Zz1rgg6xl/wmtqOKD7m572WdyPrhZ+uK6ZTV8uCUq9CV0tQ+q
mTs0StTy4WLwzqxRMx/cUF9n/+MlH2L2DfT0+PvgTGdc6/l3fNi6SCmqiuWD
vvvClwWw+dCUmPww4sop/F7uNR+n+HDYWuq7051TOH/+osaGX3wYELugaf7k
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
dHwU/MEpm1j8tU5fUy4dpRZUxYQSb57Irh27QEfF4g9/DxNf3ecQu/kyHTMM
l8orEbfHPzt2/BqJp3LK02myv+bfV8HE63Qs/HarroM4YPHnmfeldKy4YC2R
SVyENt0/79Ix5BF770niTt/bz+Qf0LFl7x5RM+ItTYGRLk/o+OM2u1pA9j/l
b9vh5Cqy34159ZXE17U2mZQ+pyNl6KZVMvGiVKHfk6/puEJ9Q+lq4m6r9JDU
T3QMXnJ3ry05b1IhowfKWHQsesIEKWLLor2GrZ10XOC0uKyNnM8SYfmfSlxy
3qR+rT5MHPG8KODeMB2f6f8+s4ec99LReXtYo3Sck+bNWkDMU/bZMD1Gx61c
rVsvSb6widYbtfxNxyfhCov0iOVManw6RBJwl4TD9PRSkv88V+2cmZeA+r3C
f28Rx5xL0Fq1MAEVlHMu2hMLJm2/eksnoNYa96oykr/KyzvchVQScOuTtw92
kfxmt27shNrGBNwd6F5qQ/Ll256m5bKmCThgXGFISiOYZ91sFYYEVL8x+1IK
sf64sxVvawIO/bsu/WoRyS+P32vm7U5AvpfYjfWSJJ9bln6Xck/A8M5f9k3z
+2D/ZPLNWV4J+L0+4cAR4qbrridGfRKQclPe/CvJ79XzFVvfBZL3I58OziG+
3JJamRSTgHrNikx1Uh/cj3jEzOQk4BW9l1NA6gtXwtJ4+FwC8jRct1WR+uNQ
o/K962IC+mdGZ5oQ71jVfvzR5QT83NMvq0fq1brBbdsopWQ+L30XygqR80VR
XfjlZQJK3HXRKPnDg5i0nvOt4wk451rdakVSP4u8LR7PmUrA65/Q89R3HjTa
Fnds+JOAp5PCs6pIvZVb6CuXMSsRQ7KtUw6TenwvfebMNolEPP3lkl7SEA/6
MxSzHqol4sVcRlOJgAc2WYcTzzkkosNPeu/qTnI/8K8uen0kEd1v/N69r4MH
OXarXv08log++cJlse086Fv8VXjPyUSMbCrc1NFG7h/M8DhxSiJa5P1MiPjI
gzvZ56Ii0kl/JnsV0ht5sCSHFXikJhGFZgZu9D/jAXXqvvf+F4nIO+fnMIv4
qwPDdeerRKS/mK+k+JQHtcrbD25uTESbMqVuu8dkPDceb1JsT0Sdz9VmZRU8
aHiaN4vzLRGvSGq54B0exPWdyHRUTkK9vmPfSy7xYFRn9Obh6CSMuW94uSiK
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
PnhjKNnMZ0M87fSvf9VM7HlWfOLRZzb8D2fedo4=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2517#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5]], 
          LineBox[CompressedData["
1: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
QbmO3MXz1XT0H0Jxf1A=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$2573#1"]& ]}}, {}, {}}}, {
    PlotLabel -> FormBox["\"Nuclear Polarization\"", TraditionalForm], 
     AxesLabel -> {
       FormBox[
        RowBox[{"B", "(", "G", ")"}], TraditionalForm], 
       FormBox[
        SubscriptBox["P", "1"], TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 1199.9999755102042`}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"0Degree\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"0.5Degree\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"1Degree\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"1.5Degree\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"2Degree\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"2.5Degree\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"3Degree\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7795462321573467`*^9, 3.779620016166093*^9, 
  3.779683951016554*^9, 3.779684203946233*^9, 3.779722730077181*^9, 
  3.78142554116012*^9, 3.781431955935874*^9, 3.781435807309936*^9, 
  3.781436198965149*^9, 3.7814365441724153`*^9, 3.7814367485904007`*^9, 
  3.781437677753776*^9, 3.781437959822459*^9, 3.781438208671257*^9, 
  3.7814383858417535`*^9, 3.781438602029704*^9, 3.781438897263222*^9, 
  3.781439208841132*^9, 3.7814394495352225`*^9, 3.7814446716779127`*^9, 
  3.781444834877771*^9, 3.7814450556358795`*^9, 3.7814458036520343`*^9, 
  3.7814463658990636`*^9, 3.781446747596133*^9, 3.7814471350890613`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"f736f15f-78b9-46f3-986b-00b4264bed6d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2693#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]], 
          LineBox[CompressedData["
1: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
XY/nh0/FdB92VPTVX/8a8PcJ0Zi5hP0/oOrlUg==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2749#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1: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
N7/KBOLc/G6LZVxPGrkMl7dlgh+bZRnPLzri1Gop/Pw2E+jPXoRE/qWjm1LR
O/d+xN8/+15VYR3uh1b+7v0wlAmH52bl/3ARaN+Nhf3CPzPhJ++FUKc9BGqw
d2C69CsTzq67XFq+F/cz29695/6TCQHvVPNnJAl0MqvEg3k1E85cjVk+L0Og
IJLZ9R/rsqAon2/BTZFA9TY1bA1cWXAm6DEH7SCu5zd7frPYkwVKRXfuBBkR
qK2jp6pjbxb84DErJB0jkGmqTvgRqSwoOcU/lnicQE7rtm3RlM2C0kARrxwT
AsXNvjaS2J8FE9caey+dJNCr9j1185pZ0Mndv+kE7ieOJ4ykUyyywFP6zbua
swTSP5JupHwqC17MbbK4cQ6Pz6nGNmiVBYfY+CAX9yeKuenxe2yz4P6BL7rn
vQnEX6oW3uScBV+zGwLF/Ak08CLDY8I3CzrqAz3kLuD+c72GrkFKFnxYGniq
mYD7i9c0pqnULKgscX/CTCaQdVpmc3Z6Fjx/yhn5GttoM/3gcGYWJPnyWBgn
EUheIksx6HIW3NnmWmaE+60lXULkxs0sONn0+y8X7s+mWbMHDW9lge4adbcW
bOLdoavTZVkA0nYN53E/13cye7N6RRbcmJaT6cH93mMXTY6PtVmgFznrn3aJ
QA/2jr8Ovp8FKUruvqqXCVQ1kU0WfpgFb98se1CxCwPH13rU43gaXbbaf5VA
V1RznnI2ZsEy7dGJfuysv5qR9x9nQcjAJjMS7i+Tn46rWzdlgZzARQuJfALF
xuX8+teMn3dDx/k19n9ZHzBW
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2805#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          LineBox[CompressedData["
1:eJwd2Hk8lF8XAPBCEmVttYZKkUTWinuyy5IkW7JFSdn3fRiMfcbaL0kiomjR
phQhQtYilGgYM0OyVJYUvXfev3y+n7kzz3PvPffcc0i6eFu4sa1Zs8aBfc0a
1t9HVn/nv1f+1hpzjyoVOj2BKJ9iw8XTGUgta0cJy9m07A6O9EXE/eFbIcuH
C6Nyon1X0Gfltussz8o/PhB5Zy0Yo8WrLDfylGcezueAYXf/HJZzJ64vLKat
h9nDiMLyxbeZdk+iuUHG/Ewyy0dLSLV+vpuAbtFCZDnxmJbAf4r8wPiTEMGy
7wP1xqA7ArCf/78Alu0kDgWelhaCGMe/l1jWTZeXUc7fDA4Nj11Y3nZZKmUu
bRuo6e02Y3nNZ1HNbs4d8P3giDbLk0bbZu5FC0Nn46wqyy9lNp667CsG1RHi
YiyX5nKuM54UB06Po3wst8QSPmcr7oS2pCdrWH44F5bmf0cSMiteUgWx9+wL
oY+elwI3ZNLDcp5TILKQlobNUodfsxzX5T13MH8XfIg8lM+ydaXr6ek0GXis
VWHCcjvN+d7Z43sh1FxLjWUQdVzfwbkPivKUJFmWTbF9fjdaFswea/8UwP7r
biZ20Vce9CvZKSz7FhoHDcgfgLYbdwJZpvcbdhlMHoCqP4/sWHYvvglZigeB
f35KiuWTgvk/fO8oQoTy9F1+7I33hG+UcymBoeiNVJabja4aU88rgcKB+5dZ
PhyTe8tc+hCQT03KsrxrlmKlkK8MR3me3+DDXuyIfzGVpgahJ1Yv8mK7Im51
gV9qUNrz/CjL7x+kP1GxUwfPodu8LN/LuvIgao8GTA5tebCJNd62vJS/7jDU
CPNPbGSNb5PfpbL7CPBWqD5hGY5W3bRNOQKyd4gElkUkavKLrI+ClUPy5v+P
p7VnKs9qQvElESUe1nirk/y2Vlqwzkp/kZv1vLd9aZEvtUB3PqmG5aQ7w4nN
iQjYeCyPsbxTPQRVUADO+NQd24Ddv5KkorVPG97+hs3rsdNVTQLM7bVhw5RA
Gycr3rx5H7mQtaF2+1AUy1VfMw+S5rXhasap8XWs8Y3X5LrrdaDuT0YJB7Ze
UqWki50eKO6znFvL2r96b6eAND24kVOZw3LVsuKNhNd6sOfFZ3WWd15+Knp3
jz5cOFMRvoY13qxu268f+kBVGPyxajmBHm3u2ZSQYghlU5Ilf7Bf+orQVGoM
obWRQ5PlN51uL8YnDeHCldoPy9gfE5fP6x03gg3y91Z+Yy/9lX7NseE4ZLFp
6ixha40H+RETjOFwPU/WL2wD7XrDQ0+NIcfEYBvL5jd4JMbGjeEb81DeT2xn
28J32nomkG6yNf8HdlxH6y42DlOQLakmz2K3PRHtJ8SYwU4HeeUp7PeCFyoP
PjQD7Tzdom/Yn70fEr9+NYOn30d5WZ7ap38Q4AQw3pWPTWDzFXgn/Vs9ARNb
BcMZ2LI6VDFUaw6pje0Oo9g+csrdr45YgFLcxvGP2MNqBv/ETlnAs3p9KZZN
de0ORHlYAEHgxdk+1vfPElK1rlrA3UjU9QF7PL3dsG7BAhQaPfO7se1+uNa/
fngKhnNTh1qxW1aDZ3e2noIRtc9/WrDVeFIkYr6eAj5vhR0sb971MPIYnyWY
K302bcbuPL2i0XDZEt7uphY0YOs8z6lqlDkN85M3h15gVzWVUaXRaWiNvvfp
OfbO9zX8cVangS6Q9LEae3WS6qUbfxoqHl99+xS7WvSAXNPoabB53JBehb2f
0FzcfN0KzhN/VpZjbzVYzG4VsoGCa5Obc7F/tBgv7ZK3AQ2v92XZ2B3HC88Q
9G3gQkSmRhZrf8yMpNRCbYDwJ/4khTX+9LX7t4ZtoGSi2C6ZNd4VtUWX28Jd
67n2SOwyepb85wZbKOTplotgfd+dSVEdsoWEpgOkMOzDlzOsv/Pawbjl6UPB
rPH+YzS7ADvwK7/l5MMaH0v6p4LOAKNOmtsF24ljyCXD5gwcrdE54IR9JOFg
85TvGVh+HWfmwHqfpMHU4ltn4KHKSaIda3yGnLAAtz3cPuD2ygL7aGGX8lSv
PQSET3lqY/98tc2jyMMB1kXEZoqz4vnkwasmsdjHkLUo9t9xw5aFqw5wMZ62
TRibgzdsj3GrA2wx7Undwlo/h6HRnzKOUPaIrLsRW3218IzeuCO4GlykL52a
QEgiZ8+v+06QWxDS0omtfVFSq7XGCZRX41bfYes+qjxd8NYJnnM+UmjFNjRo
jjMccYI+W1tiI7a59+JoPq8z8J8SnHmG7VJne0PP0xnS4lXf38COdxTffkXW
BZxK7+RcwtZyfdd6Uc0FIv8qDFzAXnAPCT+q6wJRHTNCrtjufu+HqWddICdj
Mcge+3h8Qsn+DBc4VCcwaYLNe3daqWHRBdCRK+H7sf9bqDX9/uYcfHS1ZaNb
4Pf5c+lfXc85eAdyNlTsDWt2PMwcPgchqWMlQ9hhG/w3qy+dg0+yg3s/YJ8V
lfkcK+cK4VKUd3XYUtpk9+2ZrrAs+Sb0CnZFmiNRx9ENPGwMpADbLobd+tMl
NzDtNQk5jM0VeFvWN8QNnu1Z06SMfc5+pqcgww2yyo9o78MWloveudzoBitx
eW0C2IktBa8e7D0PEls11lNP4vuAfXhR7Md5uGTyryMYW3Ax5t3j1fPQdVFm
xAf79eTuG8Y8F4Bvm/r4RWyR9576obsugNJ0b9cZ7PeFK9m9VhfAcruuGMIG
LTGllJoL4GbMSGZnjQ+1v7wU5w78HrePEM1x/ggcLXlKcYdF2TtnwrEL/dxH
AvLdISxc3scfe9flAIu5R+5QTQsJOoe93zFVfXLUHaIf+y9oY2vpveQYgosw
0Kvy9N8JnB8FRK/X/b0I59Tn672xd/EWfYzk8oCfO3stzmPTuffyH93sAXWG
Eh/tsT04lInVch7wXeThIyNsv0Xjiw/tPOC6+MsWKey4L+EqxdUesNF1yOi9
2QS6Xf65IyHgEkQ8SxHbg73TOfamdswlCHNeN7oD+7/t+wJX0y5BkHxm1ibs
ZFKQaNDtS3C/3//VL9MJdNlN4JLbp0vwJPDQvgbsg5IGXLpwGcZWhvVtsV/8
V6W9dqMn1Hgw6oNNJpCSue3WV9s9oXeGf9od++76NZMhuz2hQcmB3Q47P8g0
Y1bLE7iZH5lHsKMtmSMjvp7Q/tH62qoxPi/84pG1/Z7QPxIUFY3dSUp6Fl7s
BRvU5uW9jk+gM4aCcw73vaDLe/DCWWwm1zVZ7RovyHuclGSCzZZccZ3rgxeI
a9USZbFVU7uIOWzesP9CyIlxowl0g7LF/L6zN3iHnpO2wq5uNw+Y4/MBtSfp
ZdKGOL/u3yIwtsUHBpMOZPBh66UNVvaK+MD6E7n2fwxwvJi6MJ7J+MDauA3X
3mNPdfrbRSEfiHCKfhiNLdmTCzzePrCv9opIrz5ez76hjbs7fYBZmJDkqjeB
jCvzXyx98IGet/sZJtgb4+3d2wd9oKP7oZQKdrryUKP/uA8EBcYqrcPOyvoc
1vDXB0ZDTe8X6+L1O/mJ6SjnC99JVVODOhOosqP/TV6iL2z1zxncpz2BvEqu
+Hml+8JXm2TiJuyDkdY7tbN9ISbyC/vcMXy/7O8Pn7jhC5NbyQnPsJ+mfFRS
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
VD9XShCuX669/HB06mkSXN+TPliA6x0zaXq4QncS8PCKuNfi+ujRLPfyE7Zk
mHalhh9wx/tT53akbF0y1HWrPS+5wEST6a8j8riSYcZEeU4Ee6d80L8o3mSI
dt9nvO48E6VfpHIYCifDlwVyxDtW/Tb6jO+TYjKsdSYE7cL1nWSv6+5Vp2Tw
dvPfvILrx6PFdednzyVDaJhOjDm2jZ9w2ej5ZOCyU60qOoV/j79b9u3lZKj2
vmejY4Hzu8mRg5SQZPhLFiUE4np1oEngiBQlGZ40C16+ZsRE5Ge15vp1ybA3
bdp++Cj+vSc3l4IbkqHvb+f0zyP4PngUV1jelAw+5tLP12M/vnd8dmN7Mrz8
xTO5TwP/XslH8oeBZEgRcXe0UcHzy57udPqRDLMDzpl2uD6fyOgJypxPBra6
DgGL/Ti/kR+Lv1lKhmz+qxkGckykmxLmJfMvGWqOShL34/rePZaTd5onBT7J
tNR/2YXvZx9x0/DdKRBy67b8JxFcD3utna/YmwKHznUN3BfG+3WZlj8slwID
+l46xB0431y4M3VMCTs7Vk96GxMtOaimcqEUkDvyKdpAENejpmbvcmxSwDeP
t16Ui4ne74syepCSAn7d0m/75xjoa/lg2930FOjQeGkaOMtA0/tUTG5npMDg
nxFz/hkG4padMiu4kgK7L7x4roX7JR1ZO8vU4hSYVxJKj6Az0GNZVUf3mhRQ
lb1PDf7EQFfkpgN2fkuBcA7lJYPXDFR612hBZDoF8sb2cqfU4vFyJcHb5lJA
XtfqW9tL3E/K2YfxLqaASsB1tmPPcT+4vy36L1sqRByZ7l1XxUBh+0uTB4RT
YYfWd4epIgayl3copBxPBeOkRbaVGAbae1FNNtI0FVoSmzYNRDPQz1v8jy+a
p8K/b0qK9yMZKFm08a22VSpItWreOhmK+0eevTO/nFOh9Yyn+3kfBhKanNO0
DU0F347wspazDNRWGv9ZsiwVKnqyjdRUGCh31MGN924qKClMbUpQwv2zuPrM
ciX+/QdGtC4FBlrKmWTrfZQKjTtoRZayDLQn/oRsQl0q2FamXZCUYKCYcztC
Jz+mQu7CIWbdegZS31m59dG6NPAd5r7Q0UtHD5N5149wpcFxkb/RUj10JDvv
vci9MQ3WOo06+HTQkWib0oCLYBqQ5+MOLzTR0ZqA6quCEmlw7m/Tn7KndNT6
tlHUTz0NxKxOK93IpSM7709SipfSQMZvv7O/OR19GDwidNYrDVKKrnO3GNOR
ie519iTfNHDxvzEiZEBHWjucaF+D0+BhE9sXiiYdSTWOl1Di0qB/QY8qLktH
k1vn9s5eTwPF1XqfmLV0FF67XuF+dxoIB9ndEC8fR4fvUpdufUiDujllv/Li
cbR0paYh72MaRP94WixXMI4CfL2tEobSgN1nadvWrHF0eVd/5FlmGrRlB/IS
I8aRQ3JpO8+adFg78KXppek4Ais9D3eFdOirKPd+M0FD66ZjSyTT00FqOaN+
hJuGfDaM91llpMNzLvH6cTYaGtplwJmanQ77394KpC+PocdneC4s5KXDv9bz
EwOTY8i1NWvvu9vpEJnKbEtsG0MNt27dDahPh9ccp8PNk8ZQ1Jnmh29/pcMF
5z2055xjaDJo7+jfxXS45JpUV7Y6iqwykwWV/qSDMZOfmb8wiuRbzfzz15Lh
UYna11z6KBpS7Vf25SUDv3jIwpfmUXRYkPlMeC8ZwpVi1kkmjaJS+ePME3Jk
2PTiYO21mFEkaFSxPf4AGXRVzhlLh42iiWif0BllMrw570azuzSK/vu+dPjN
MTI8r2RTCjMbRQstG2o9z5BhzE17fnLbKJIonFjIciCDVl1OVZrAKDIMblV4
4UyGHn1ari7PKMrbnXST050Mccbej2dXqUgrliv+RgAZ5khth04wqOiCLfNV
UzAZ/hhfFyukUhHlYMvCtzAyeL9o7+MaoqLRYZK7egz+/Yx4L+keKko4st6k
J40Mt1t6tiW9pKL7goy4RQoZZAd/n7r1jIoGJppfiWWT4fj5U/c+VVGR7H8J
Ch55ZKhp+n0sr5yKTnmfd6dcx/7No76rhIoi9PVvPi0kQ9Dbh01thVTU+Wud
EPttMjzufLXe+z8qWnw3brzvDhl+ayy6eWZT0c7iprgTlXj+Xnr3kyhU5Hcy
fuHaIzJcqmA7LJZERdvucXxSfk2G4toRoepwKoJ4muCZRjLskhh+XRlCRR72
b4xjmsmQdvdkRGMgFb3kjnvV0U4GSRLb4gkfKhqnnlv42UUG+o0Q4beeVMT7
XEdB+AMZFtlfb3a8REVOF9hvnh8kA5mkpPTjPBUlaY0Npg6R4YCjxo3vrlRU
taVR8NEIfr7IiyDuc1T0earIeHCUDGuIe/oMnamI401s3L9xMnxRivlQ5khF
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
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2861#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          LineBox[CompressedData["
1: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
93OlLR/0OZITL0zS0f/LIjR1
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2917#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 1, 0]], 
          LineBox[CompressedData["
1:eJwV2Hk4FEwYAPCUkDNEpRAlodxJinlz5UqSJFcofSK3XGHXue5dRyqVkCMS
ossRnSQqN0XsYg9HlIQkfeMvz+8xOzvHO++8s1Iu3paua9esWbNr3Zo1q3+r
rZd/fXvwW2fULaJI+NQ4Smhy7DuR2odqOA0KVk35EnVFIpWJUoRv3F719J77
6xNLf6BnhaHpq84cy/zAnrqAxFnjUavWyo24SvD9i0o3Mb1W/X3fI8XwUjZw
C/CzXvVrnpJ0rVvs8Nox+eCqs8Zvzy+kcMI2zf1bVn2xOd32MYEbcn08Z4Ww
DxeSGvx8+aA/av+7Vccf0RG8rrIR1s+m3Fi1b6Xm68BSQQgzCrqwaltJtcun
dgpDl8is4qr1U/fJqt/aBJzfVmYFsTdfkk76kbIZRHg7PFe9ZmC7djvHVpgM
vbZr1RPGm2fKCWIgpTPbuxG7Xpb35CVfcaANXVBcdVEWx3rTCQlwfxrZJYD9
Loo4kKmyA3j7VANW/fBHaIp/qRTUup+5x4+9Wy6YMXJBGhLDPh1adbbTZWS5
cycs8n99z4cd88n7h/KtXeBg2DjAi336wflT0ymy8GZb7jtu7LYx53IHkz2Q
2dCpuWrYfpbzA4cc2CrcKtiALZ90puY+QR4Ebv3w4sJedjMXv+i7D8Z2ZH1c
v7o+uaaB/fsUYTfDa9uqGX1Gn45OKMK56f5z7Nhud/MgQ0UZMm/bM9dinxC6
NetbqgJt3mw1/6zGEW+52J0SLlX40aI3soLdZHzDlHZBFXpO8HGuWisyq8Bi
pxp43VfSW8be9Z1irXRLHYIyomIXsRc+xNZOpRyAexP1yt+xzyNuTcG5AyBm
rf17GruzMvXxfltN4Ak6Xf8NuzzjWmXE7oPQ2GWmOrna/kxJ0cZGLbAsHhuk
r7Yfa0tX/64NtI00uS/YYH1i4xlrHfA3C8ruX/18c09KeL0O2P/wWd+HnVA6
FN8Uj6BHkvC+C3uHZjAqowDML1/f+AG772/Cfh05Xegwlk9owE7VMAuwsNeF
0SLBnHpsfW/+aheyLtwgb31Qi11FTVcm/dIF4+Lgmier7V/fVGh/qQfxLd8T
y7ENEh5IudgawFqdeN7b2NWbOvjikoxgVrnb9TJ2ve+2sf11RkDN/jrih/3m
o2stfcIIbC+o2/pg98YvXTAwMYY07ScHPLAXl3e+YN9gAu+uhz9wwtahB/pF
x5mC+j8KwQT7qO5LI7UnpnDgF+edo9gWd3gkR+mmoHE++Jk+tvOZ3FZdAzNQ
cFb6rIMd86Fl11r2Y3Aw53SHKvb7x9v7iJHm0CJNuLZ1dX2F/nug/NAc7rsP
nhTFHvB+GE2lmsPj2J4NwthTcobKAMdhi0+UCy+2QI53wr+V4yBH2Ny0chLH
ox5NHDVYAMcNisUIto+CevvzQ5awR+GxXgH20IGj/8RPWsLnjXGHcrGP6dsq
RrhbwgBy3ntr9fMOxGSdG5ZQD2K/M7DpqW1GjfOW4CDwSTsa23b2/MsXD09C
0tyYpxO2Xs3Vqteyp2Dz8So1Eeyqt/doO9EpqFN11tmIvaOzbmOM9SlokJA5
woO9MkHz0o89Bd+K3iuyYT/brqjwduQUvNyfWzJlOY72EpvuNt22hgThGZFX
2KJHFzJbhG1gs/zNxAvYs+9MF3ftswEP+LfOCfuDSa4d0dAGssKe+53BjjE3
lj4QYgPE86LKZqvtT92sKBiygUiV/j0qq+3Po/eEkjMg6XyK8/cJ3D6K9G8/
soP4C+fFiNhO7IMuaTZ24CudJBOMfShOuWnK1w62WNru8sGeTficfLfADl4t
P1k+u9o+TUFMkNseal82iyLsw7mf1Ke67WHuzsLIksU4+vl8s3u+uyM4iQ5c
csNePKF8wyzKEZqTqvzPYi/Tjd7N33CEodN8XtbY7Pyhu01bHGHYZpO2Prao
4+DIT9mzcH20T1cSW3Ml186Afha2Xwihdh4fR0jy6u65CifQMg1dUsLWvSil
01LnBIeOLVrJYOtXPziV0+wEdn6CeWLYRkebYoyGnSBwqZNvPbaF98LILX5n
ENFqPPDZfBy5NJ65Y+DpDCt/TzdEYMeeldhyTd4FXgd9EWs4huP/fGvLxQMu
oPHzZXAl9rxb8JXD+i5gSNzxOh/bza9ziObgAjLfh7eTsE1i4wr3prmA0YUy
mjk2//1p1VcLLhAYuif7i9k4uj7fcOzbm3NwN8iPd8QUj+ePx7/GjnPw7UpR
Uwf2hjVbH6YPnYPupz8vvsQO3eC/SXPxHHiUnPPIxXbYLjsQpXAe9r+wsnbA
ltYlu21JPw8Wm98+7DQZR2UpZ6P1zrpCvET1nVJjHL+R605/8XAFvbI9N69h
c10ulvcNdoWEf8VhMdjn7Gc6ctJcITlY+4cDtpgCYcfSa1cYM+O5LYAd/y7n
eeWeC1C9t5nqaYTz47qhBfHZC3BP/ZKYyNFxJLQQ2fpo5QJsGRVNXzEcRy8m
ZO6Y8vwHLaEqk0zsbZ2ehiG7/gMzkU1HarE7c/9mdlv/BzO8gkEO2KAjrppU
9x+4qu9h3jbA7UPsLy3GuIH/rqW76/Xx+b08UviE4gYhDItXU3rjKNfPbTjg
lhucajj4sgt716UAyx/VbhD3RMopD3vv2WTNiRE3KGF+FT+ErWNQzz4IF+HH
t74AN12cnwS3325cvggDZgYuJYA/z5/fG87lDh49byEZm8G9Z+PhTe5wGp1d
8sJ2Z1ePfqbgDhG3t62oYfstmF58aOsOxwguuvUIn6evV/bffeYOH2O90t/q
jKPikoEPcQEe0J9pNVJzGOcD56g83UgPuFud+jUT+/oWucsrKR6Q8imj0Bs7
kRS4PbDYA17d7crehX3JVdDD9YsHmH75Kph8aBwpSx3l0odL4LVmw7SF1jiq
vV6ly8brCdF/LktVHhhHqhZnRJ9v8QQB4T9iMdj3OddMBMt4gpswo/c09q3A
Y2nfdTxBwiUkc0VjHBGsWMPDvp5wpuTIdmNs/Y0S4Q19npDOn7ChU30cfSQl
PL1y1wueFP9HrlQZR3ZGQj8cK7wg445+BgGbxXVTXrfOC8iNstbm2GsTy25z
dXmBxYeYzZPK40gj+VP01bXeoO+6KUIK+w5FxKLC2RsaK5RjIhVx/muzCPgh
4AM1kXtu8yjg/LhXRHBUxAc2pwo/75DH91nK5wfd23zg/Pqe1GvYncdcmE9l
feBoxVpDaeypj/62EcgHBD9O/1KTG0dSHVnA4+0D73s9vx+VxevZM8gr89EH
8mnb3yjuHEemD27VLnb5QLlPT/SkNK4vYu3d2j77gP/8bVYxdqr64Gt/ug84
vlS+I4mdkTEQ+mrZBwaKRyq5pfD6nfjCOqvgCzy9RsyPEuPowYe+N9nxvvCx
HnnxiI0jr8Jrfl6pvjAi2/qgbiver/DTO3QzfcHNfTzCA7tqb9+V8Tu+oKy3
o6tlyzh6ktSrqvnUFybP/FGK3DyOGox7cnvovnA7S37bl03jqP1tZ9hGPT+4
sjzpoSSA57uUv+Bi7AdL3Xes3/Hj86vs7/f4uB94l+rlO2EfyRZ2s7X3gxuZ
rNNkPvx9XlYnCy77QYryGnE6zzi6urlXTvOeH6xxVtngy4XzwcXPvWf5/IF1
1vcZG9s4CswpOVEl7A/1WTvcY9aMo/SukDZ2MX9A25AVB3arttirkt3+UJG7
1Mr5j4UOC9k9+Inw/115d7D9ZSHJusFokp8/7D7Vyt62yEJjvFTlij5/8KfN
nnk6w0KJhnmOV7/6w2fjz5Z7sFWILslXRv0hf0OH9/VpFor4OcY8OuMPOxh1
AoHfWGjLl/EcKkcASPZp1u2eZKFjxT95hTQCIPmu20l7Bgs9OcI5HpAZAPNb
DM7yDrKQ/ZV3onbZAVD9zTTTcYCF1j1O0D+SGwDm7s8eVXxhIYs9vLl8ZQGw
pjG3wvwzC03wC54ueh0AhJZ3Jwm9LCQxKPa2bzYArDdIBpW0sxApUDFP68Rl
WNr9ar/gGxaK51tz687py7D+i1i+/Gs8n4KOLHbHy8DkbfbVfcVCqZ0ByR/d
L0P+fq99ni9Y6KpiXZBLzGXQuO75qLyehe4yjponPr0MgxeM+ocesVBB+Fbj
meeXweRg54fBahYq2jSpZ/XmMnyN45jqr2KhUt3UgxIdl0HUkZDeWslCD3O6
d1VNXIZ5q98i2WUs1Gjt/OezeCCcbPQ/2n+XhV58U53X2RUIrkNe3U/yWehV
DPuPu/KBEMNz1yAjj4WaqooZngcCQfP+1lcGd1joA/90B9uJQEiXcc6hZLPQ
QFPoPbmYQOj1t7laQ2GhBY3MUyETgTBned9G7QoLBRg4O7/4Hgj2pIf7W0NY
6PtJRU/OhUB4emHfOadgFmL5vIu5ui4IRISdr0VdZqEvpcvVD7cHAcd1+2eF
3ixUL+EqNGEeBM2nlgycz7GQ5j5VCZVTQbBON31/qzMLPTr0Ty7YLgjE//bx
qTqx0AObG0c43HB/asr28/YslJP+wUc6Mgi8owhFNtYsFMmh8cm2Ogjc3lu4
hRux0MqmdQN5NUHQduS+Z5UhC4XubGewGoOgkWY5MqrPQn7gvhLYFgQC0jGL
h46w0PnQnH0Z9CCoYDydajzIQobTHMmtm4Nh9559FgLyLMTT22d0OCwY7mr8
0UzkZCGh8aucm6OCQW+zZti59Tg+l082/SAFw+uxyWzNdSy0W7pdrzgjGI4c
PmnYu8JE4PVOR+h+MLz68vXE0C8mCuCoUWd9DobSzazBLaNMFLo16Oer4WBI
Wxfudp/KRJF791fdpgeDTpyb+sEhJkq1fKh08kcwPBKJOmf4mYnu5ZTIN3CF
QNm6+F8yn5hoUCN7R+aBEFh5u8Xqew0TjRjbDHtph8DWVr0OladMNG4vmmOs
FwJiCo5fPR8x0XxU+rZ/5iHQ5t/j11PORBs/JYq6XwiBVztawPkuExn8d4UX
robAvwiDRKckJiq/Zr84ORsCN/tfr+RZ4/ZcCjEGv0Ngf5Hw0idLJvIL/i1w
518IZD98dv2XORPtP5Mla8kbChfvxgbIHmWierF262cyoaDqlUfeeYCJ3t/W
exxjEwrq2U+ML4kw0V5+oSNDjqHgpVHnziOI5xtBbTvgGgpqljG/cnmZ6MTZ
8LEJ31BQct6wUL6Oifp3PBU+kRQKEp8EPK1+MBDjrryfeEMo6KduEKt+z0BG
m37/DXwTCn+D3+2veMtApTHNCe3vQ+HDHyvf3BcM5Ol6Pi+6LxRsusV/OT9h
oLndOe3j30Nh8l73tGMeA60tFVR6svMKkIT1xhQvM5BE5eKkecIV4BRZPJIr
zEDcMs/kD5OvwDv/FyKJfAw0fyPootzVK3Dyd4+3GycDfYyeZ6zLuwLpp9KS
1v6ho4jTc7Rnz67A109JRvdpdDS0MtMnzboC7SM6V5vL6CjnGPP1vGEYmI41
MAW06CjxVdHaMbMw8FAsCyKo0lHggQtHOizD4D1l8vioPB2ZS9Eb7juGwYf6
Iq74bXS0MjdS4xQYBtU9EjJHl8eQ462hiveFYXDWYfl0Wd0YEp/suZnDHg5V
4pn9X1XH0PnnhcXcPOGw207Ny0huDJWRL1cHCoZDL/qzuVRyDGmpi7SaS4SD
2D+rwZO8Y8g63Gpp5UA4ZLQwZE3oo4gi0GVz1iMcsiTfewpljSJ29XaRHZ3h
YBIR1SQ5P4JMOXKlkvvD4Z4e85Ta1AhK7/fetzgUDlGCziFmIyNIKlzAoH0y
HHbKVdPSPo4gnSbzAOL6CPgid8AstHgEBdl86KRqRgDrbfObY3YjqEH+9pAZ
igChmrNf2S1HEMffSxPPDCJg+rxAZqvRCMrM412bZhkBxSKiHokaI6hywlTl
yKUICOG8mTIsNIImwt6T8+5EgDCaGfL7RENlTVfLZgojIKH57HJGMw15bXRu
0S6LAKaUe8qHRhr6cXdh7ZdnETCSVCKRXElDi+93BQp1RkCWnto6gwwaqt30
Pd2pPwKkuL52HEimoTDHuoryoQi4Lqi+ZBhLQ/9+nBg3mYyAhU0BIvVBNMSx
lWAfzU4AGXmhOV5HGnrnYhLSwU2AkxUPpKdP01BimUiWpCABrgiNd0yfoCE+
KPtUJ04AXVel9RaGNLTpv8+6cxoEiM/20MpWpqHeyoKzutoEOMKxwEZUoKHr
S95hFD0C/L32No20m4a2pXI82WtBgBTvJebydhqSfqwm53qRALtqa8tjeWho
bGXFoNqbAJdUSEIEThoqMnrvwhZIgE7H6Bs319GQ3KDTrdtRBMg28Q/WWaai
CZm9NZPxBAhfEfzzZpGKyrwXeg6SCTC+YDDv9YuKlNelCvTeJAA7b3XMvhkq
mjU7s3dXPgGMSY67daeo6FHWLmO/ewS4mXbDIXScig7I10XxPyaA5MjpmFNj
VLToH3fHvo4AW354/LdIo6La5yfqS18S4KelaXPDMBXpnGD9MvxIgCeNfi8f
D1DRmpvVQle7CdCYw6PB+ExFr8YilEa/EEBTSmnwYD8VxSiamKnQCHCQmHWj
speKDIJFLhKYBNgcJX7CpIeKOF5RYz98I0CRfecIRzcVveMpy982RwDPjvV7
GZ1UlHgqqPHiEgHWhdlxsjqoqOi41LTdGiIUm3wx48UmzcUtR60jwrWtfzss
26nI7cYUdykHERLcX1+s+0RFxjqWWzs2EGFB+dWYAbb86FPZRV4iDJepC85+
pCKeeHENyY1E4DHnq2vEntobrW8oTATHGxxl5dhtHSxLT1EiaPI8ut+A/SDQ
3DlzKxGEfqQTZrC7bu81jt1OhLL3VT5auP/fb7hVAiWJ0BVck5yHLTnF2vKf
NBFq6+Lv7MLjMxBuXmMjQ4RD5Bz/19geWoUsoz1EWGzGpxbPJ805uv2gAhEg
mxV1Es//abzzM3lFIvzhSjXT76KirxUod5sKEQha/nPH8Xqt6xOP51UnQs3D
TzqBeD3lVv54/9UgQu/FuukneL2Py3w5PX2QCGe6DjYJ4v24bPYMDR8mQk+l
flwc3q+b/lmy7YgIYZ2905vwfr7MDhB4qUsElYr5hvpBKuIbVx7ONyICh7Vf
ymkqFaltFGjOMCXCowa/9SYjVHTmwLfyGHMifD3p2G+F46cwtiTighURjlqU
hlSxqKi1jHTh9Gm8fpT8OvZJKvrR5WpuZEuE3ZXvkNc3KtKWlpaQd8Lr/Who
OnaWis4Zr+HYdo4IqW8T4tVwPCf4DH3juUCEvV8mjiwsUFFPQ/bzbx64vyDa
ZONfKvK0E3Z4GESEfovM6WPcNJQR9UM/PxT3Rz1rV8BHQzUln/ZmhBMh6Awx
lV+QhtYvJi0HRBOh8UaZiPgWGrqdyX5Lk0yEjKItICZLQx8+/PrSWESEgq4j
8SeMaOjnXNeryhIi2EidN3phRkNbt1eV5pURYdeW0/+0cX5wdfcKja4iQvtO
1R2utjT0l4O59WgDETqP3ho+40lD+6Df5mMP7j+X+enmVRpak6VTvNJPBBR0
YP7oTRrqniz4pThIhG3XOw6sycP565pvOnmECIYF5Xczymjo/TR3m8UMEf5m
up47/IaGLtzWRl1ckeCZeFnU5BcN5S7ly/QfioQDMVKnd9uPIOHHnrO0vEi4
XWLwxl9xFO1NMRMbLIgEE8vChVD1UaTvqqDbWxwJzjfN+AhaoyhQZDzt/YNI
4KjZEBhuOIr6L59Xqa6JhKcicREWjqMoR8POJ6YjEmZIBL9DKaNI/pnR9G62
KPjjYXg9nzmK9CiyolLsUVDjOLRe4tsosnfj0NnGGQVvx9nEM2dHUcqWNykC
fFHgJGkh5fN3FH0PRvsWt0TBy7n5BIbQGHpyUONSi3IUbBijWjUdHkNH6nZO
eDhFwTeBJgGl5DG0+ThR7PS5KHh18k/tAGUMfRsZNNG9EAWCirI1UVfH0A3u
rPtbLkWBcbZaeWPOGPpxhsvzbVAU/OzXivlVOYbyFqdmJMhRMJvOXXOiewyx
aTz51fE8CnoL015+EaWjvhah3c9f4P4Hfz/uFqOjBw7e1vdeR8GZXH/9Fgk6
OhO752lESxRYnWah/N109LA7O1ihJwraf/HIbtKgI2d/wp+YqSjo0lt7589J
OnpZacSmuS0aDl7YuP9PEh3p+++77iIRDYHizRU3yHT0br+QUopUNCzuzIlX
zaCj9toB+xHZaFgS8vM5mY3rkTdez5LVo8FER2rQ8h4dLfVnetOORcPQkJiJ
+Ws6UmejfU0kRgPDv2jM7RcdPXv9NuBxdDRkypIanRbp6FBcKQ81LhqsHvzs
P4nrHV2egIP7U6JhzzPmiAIbA50Q4bw6fCMa8o86CBXwMpCX3D4z9epoMCuu
e1srzUDFJ0Jqv9Jx/6f+WVeYMpBPVq98Jysa3Hnb4mePMZDmgNrNpslo0JW6
Z6JqwUDvz09fqfgRDWqRXOnFVgw0FXROO/JvNLzuc3hy0YGBVHOOvdglEgP0
zKkgCy8GapiQavLQj4Hw5rDbzSkMRFIiaDgdjQG2dX5NhWQGsggYLLIyiYEX
b6b4I9MYiPY3i6RtEQOGJvf5la4yELsgr7GAfQxYvvA4ePEWA5kcmG+t8o+B
OmpL8ZlSBuqJft/xOz8G3qbx/NZ/w0BmCxX39hXFQGHT8MkZXH++cr9KcC6J
ga3j0v1ZzQxUfsJpX0sFbl92x/MrrlfjJefjr9fHQOI7S2TcwUBadVJwoDcG
9i0Rl3K+MlDubHB5wIZYOPlXTNphjoFELzjG3uONhXPcO+Qe/WKg5M969oMC
sTBkLN/OtcBAIS/4ufVFY4Hkpclz/zcDWaYWuArvjAXL7F2pXSsMtF6+fXvV
4VgIVLod/JSLidydZZNmvGPhRJva1mExJsqhJLpv8o+FRW357xPbmKij8Zvx
wcBYUKzr7p7bzkSaEo+4osNi4WlGUvtaSSbiHIA40YRYqAg06ODcyUQFVraR
2vmxEDJoQX8qj+v16OdOLoWxsM1c9G6hAhPxVO8A0r1Y+Eu1SUvbi98PgsyV
9vJYaHe14zyvyERHPvqHna+LhYazQZSfKkw0dDQlKKk7FqSpoy8aNJlIKOi7
dWVfLMw6J3tSDuL3StFJjZ4vsTBPrnJz0mKiMnaxXxK0WLh80+7En0NMdOVl
kV/Vt1i413Bxmzhioi2HXnh+5ogDmapvK4IG+H2h+POc7ME4OH6wM631OH6f
DH/cLno4DmqltYPPWjCRblppDzuKg+i9+fyz2OpzzkdH9OPA/YHNcWH8/hGt
bZe/bREHdS4dhwyt8HvMoPyHkFscKLospHvZMNGphYRSNo84+HJXc/Ib9sd7
rue+e8bB9BmNtZfOMFEjj3jPB/842J9S733elonyO5KexRPw9+XVnzW0ZyI3
h4uElSzcvrbwyKezTETjN9D8diMOhnVix7ScmMj2xY4fA7fiwO2ntWUhtunO
fpea/DgouJyQFujMRIrjhoYB5XEgnlJVyX2OieYCdvFNvI2DibHyld+uTOS5
e01T/7s4cM2/ctvyAhMx+gYimlvj4MlhAcFS7D6tjO8FHXHgkFAZfOo/Jqpd
s7b77Nc4CG1wtclxYyJC8nB2z1wcKEs8a1p0Z6KiS3q16xbjIHZc/IO+BxO1
mRV/VvkTBysqWWFk7C183ltS2UhAMHjXv+MSE1WlrFw15CeBy7WeDDVPHC+e
Lo8DBEnwbi3pewD2yrGm7vxNJFiOFl56hG3Knyr8T4wExvYeIipeTDSWKp72
VJYEozs1grd6MxG3d2QlXZ4E5RvnDC2wVY7TPwkrkmAtMedtLHaEwAN+H3X8
feK83VPYBTMbFXMOkODyN9/zEj54/z8FHGvTIsEd0oYic+zNlMPJe46QYHfX
nPZ9bB2f3PvW+iQIXOzO7MM+b8HeGnOUBMzOf7fX+jJR5ca2DbRjJNAxVX5n
hW2SZke6YUuCPWnaUePYPr6NRc0OJOCfbPbl8WOirBM7m345kcDBxFRkL/ao
4CS75X8k+FRCDb6IzT1rvovoToL6au2DcdjKnVV65Z54Pp/lyvOww9JDo7gD
SPD4l+yTbux8v6E8zSDcPsTbeAq7xVL35YVQEmSrP0xb689E31WLqJnhJFjQ
ZiNvxhYV5l7zmkiCkbW+RxSwD//0lPwRTYIeQ4ESbWyXrg4dSRIJ8nex3ppj
x1fvdzyWSAI2gfXXHbErMm6EX0khQW3HJUlP7F7/v7dKKCS4lL7TPhR7+aRz
fV8GCV60y5vHYUurvx1Yf40EA/9F/qJgG22S+6OWTYKq1J2W2dhec8liLrdJ
cL2f+3w+9tXu7wcpuSTg1VBUKMGuf2R1puEuCfR/RRaXY49kPgueKiJB4auF
/ipsrsvbr4uVksCrJKLxMbbiKeJTowckWL9pnd1TbKv9Y72BlSTIbfO6v+or
IkbzBdUkSPx7r/IJdv6v+yJdT0gQr5Ll/gj7XY/AfrZaEpyx2vK5Env6sb+V
0nMScFbzL9/H3pTV5+/wAq/fn1NdhdjExepLp16TQPs4FysHe9KW4nqsiQQ3
wnwHsrCtn19yNGghQcgtrwcp2K8kjU9rt5FArvWLQ/TqeKNkLPZ/wuPfQ54K
wr4xxma8r5ME//pcznhg+5TUaon3k8DwU23b6n4M8lxTExkggYXvaKcO9lEv
/718QyRwFgt4sg9bQm2vxN9REjxyWiPChZ1wlWvzLwYJFIIo5J84PuYWxgS+
jZOgPe4h4yt2a/1ttq8zJPApq5GrwNaQDF3qniXBBRsZkazV+Iq0/tn2iwSK
cgqDV7CDDQXo9X9IwBW/+EcPe+ze5NdHK7j9G3Wr3djHed71lrHFw9PIuThO
7N3txHe3OOMh9VdHaBM+D+mqDi8zueOh2MPqUAH238yDtcl88eBE29lDxO4+
M3s/TDgetGwcMjSwo0bPke0l46HPrlo5E5+/aQOIt5KOB4kHu6rcsM/c2x5p
JhMPvMKi3IexlT17/A4rxMNy6tShYXzeh+YNrbcfiAfGQ8lbm7FNzuw8vkkL
9y9xumkE55PHdf+O8mrHQ4Dky9dl2MnEZweXdePhRe1ZDW3sg9zy4oPm8cCV
VvPtOM5HBZc4RLtP4O/jjisQ9Fz9PW2Ev80qHgwmHst34vzGyLi5pt42HuyJ
KnePY2eK843dvBAPnedf7D+M8+F35e+ldhHxkOFTe24A59Otx03K9CPjwblb
wjMJW9ez4MG+GNy/zl8jLeyMEpvKfwnxEHOy7nImzsca0i8f370aD23lPWla
OF+HCae/mCzD8yUN6h7D+b5QZepld0U8+L4Vkp1wwffPccPXz6viQXhKoSsW
WzJ56S35WTy0l2wj1uD74hX7uVa1N/FwdGXjFiF8n3DOq/VeGYgHO4vSdBK+
j5Q3pfadH4qHj3tMbmzEtlFl9R+jxQPbsJrddTsmKvW6NSDJjAdVciBfAb7P
zJjstNez8cB3EQmX4fsvvb9nkoc7AarsZT6H4/tSoi6I7ZZmAtww/UKSMsXx
yGl78c2hBGjf2nLGzwTnY6vDHVM6CeCmKhP/0piJgqbX5GkbJADF22HO1oiJ
2qUSYfhEAny2KKKF4Ps8Ov4WQdojAULERusu4PvetieCaeKVAAf8CnJv6eDx
Szsf9/dNgO2z0NKujc9PnYzkm6AEkNW6PKx2GK/nTHmDa0wC3BKd/z6G6w3W
qZd/791OgHXhtbt/4HqkIf+ua0duAoT3loVxY1+dif3w+24CfN15e0lKGe9X
gsltk9IE4LTe8J8prmdu1ncdnnqSACtWJh9IuB4y38m4otSeAOyLreKF0kxU
/Z176fHaRFh+eIt0ThDvT6ProXvrE+H7LLnuxEYmmkh9EZbNlQinFKW26Qgw
0Y59gf8i+BOhQynvlCAfE6VepLEbiSUCyUQ4Om+1nht5KvBFJRFOrnPg/+8f
A0l1n5dZcUqE5g6HpuBJBjp8t/HC93OJoDZge33PBAPZ+IndG7mQCMV9pVa9
LAZK3dgu33wpEcrk7aIVGAy0bHZImRKcCJLKa0PrqQzU/1bwkDQlEXhbUWtg
DwORnzZYGDYmQk5QqtPh57i/x3mLQa8SgXYT3YqqYyDp6pjckreJsHPlCndT
DQM9Kjf5ztuWCDVawb76T3B/hb3krv5E2HB6hFeygoF2ZE5/dJpNBPES8QSj
XAaq9JE4dkUmCV7yrMPPfFzferH9KtuTBKU7kY1WBAPpXhq7NaSA//+0iU88
jIG6/yudOqKaBDc/8z3qD2KgRUeNZC6UBBpHT8Tt8WagI8fMW6/aJMH2N15s
svi90CkXYVyZlAScoSG/YzQYiFry+f391CSQ3Ptnn6w6A03L7TcrTksCBpe4
bJMKA3HLT5nnXEsCrtl+26W9DKQnb2uVfDcJVKq9fQ/txPOT1zjrVpcEvDH+
xeICDHRNYTpgx2QSTF4fpZmN0VHRfeP5bdNJcM3iVH0kjY4eKRQGbf6RBPN5
75aqhvD7TME+lH8hCTZVnrjO/ZmOuPa+JyyvTQbiR0XO1A90FLq3KLFfLBk0
J9jNRx/Tkf0+x1yKSTJwHnlBehxNR3suHpAPP5YMwRtUVaKIdPSzYOOjixbJ
IHN8UsQ0nI4St79u1rVOhvV72hI6AvF7jmfPzJxzMjj+uTleeZGOhCd+aJ8J
SYa/qXqSz8zp6H1R7IDUvWRQo8xkDovQkeaOB6LV61Mg7/M8i3B9DD1M5Occ
5koBNafo+aWMMST/y3uBmzcFuBkW13zJY2j7e9V+F6EU2Cx+Pu9E3BhaE/Ds
hpBkClzgu3P0q/8Yaml+vd1PMwW0UvlndpuPIVvvL9IqHimwpXBpU/m/UXSl
gVOpoj0F1ttl5GXajCKt+7TFgq4U+Dt/JSDl5ChavFb3Krs3Be4TU4pjzEdR
gK+3ddxgCgybh7p76Y+iS7v6wh1YKeBP7hFRUR5FjolFbTxrUgE8eI5Fco4i
sDZwd1NKhS4Ha47WxyNoRVdS3VE1FX5nt6s+rBxB9Uq//57cnwo9p2k81++P
IM0ND9LQoVSY9gzZ5pY3glTqN9WIHk2F9eluUptSRpC09BjnW8dU8LlcMV1x
fgStn44qlEpNhe2Tl4dzRUaQzwZ6j3VaKpTJ3RQ6t3EEDe46ypGcmQpDbswH
cjwj6JEdz3/z2anQpNNS+GbNCDrfkrGntTgVSgW0zu6foqFXBQX3A16mwtzZ
VM8db2hI8QXHYMmbVKBv/uB8sJGGsgfceIebU+GHKtuUTS0N+Qrt8zT+mAq9
G52Ol1XS0A7iY0WJgVQoOTy4995tGoqwa3rYPJcKMpYPfwmF0NBE4J6R5QU8
f76uhsIAGrJOTxRS/ZMKemkksyM+NLSvxdz/FhsZHi290M74j4YGNfrUffnJ
0LsrY3eRNQ1pCbGeiu0hw4Qrc7hAg4aK9pmwjiuQIZ4tJLxLlYaEjMu2xCqS
gehWyuRVoqFxgk/IjDoZ5orKs3Nlaej6t0WtN0fIoPFp+LH5Vhqaf7ehwdOO
DNXvB84NrVCRZO74fIYjGd7yTUT3/KEio6AWpVpnMth6xz3qX6SibJmEPA43
Mrwwrc5b95OKdKK4Yu8EkOEmDwfPNJOK/jvDev42CI+H466gEZ2KKMrv5idD
8Xj7czvKR6hoZIjkphlJhmfbNVvyv1JR3CFOs44UMlj8Pp60u5uKKoSYMQsU
Mpzc9d5q9ffh/vGm5+KZZFB9SHB+uvp77/U4JfdsMshNPCSEt1LRSe8LbpTb
ZOCTcnkQ0EJFYYaGeU9yyVCfVmUd0kxFH+fWC68rJsPIvRzz+6+paKGVbipX
SgZhFf7H/S+paMfdtzHHH+D/j79uEn5BRX4nYudvVpOhYiVapLqeijaXs39R
f0EGpTcK5649oSKIHROye02GN6rJ8mqPqcjd/o1pZBMZNhW40warqaieO+b5
hzYyuIl0qds+pCI67dz8z09k8ByIGthXSUX8NXpKYl1k6Gv9EytQQUVO/63L
u/AZr0+r8txyGRUl6Ix+Th4kQ2fqpedc2FUir4Wqh8kQvuhzVfo+FQ1M5Zt+
HiEDu1BiuEkpFbG/iYr5RydDu793ILGEivbddHkuM06GL7H6xDf3qMjaT3fe
dArP7+P1bFFsgrG0kt8MGZ5bur0JLKaiezvWul2fJUPEv23LY0VU1LFAy234
RYbXexKRM/bSx5efxxbJkC20kDRZSEU7i/KEeJbJoJkoMhSNbRYeaaryjww7
UzhV5bG1SpVfKbBR4PaKY/RQARV9upo71LCWAshD4kMu9vnIjX9OsFNA5EvN
Bl/sxUvEzfT1FLh+f7Pacexkm+9qwZwUuBiXpnsIW0rfyYJnAwUqLX4p78d+
otR+KYebAocPxM0fxjbZBgkqvBRY+/JvoiX2EEdl4Rs+CvjPJNMvY/vPSr46
LUCB0x5fl4uwuYbIQxMbKXDtuVAzHftWy7+lcCEKDGe0HlTF4z85r8A+L0yB
I+/S22OxuXfa8HmJUODysNYBOvbL4zGiDFEK3DLedd4Cr09wWKWk4xYKPB4z
P9aMrVQyuKd3KwXiuexYxnh9GT1cqubbKBB1PVG+H9tKyVlfR4ICzbSEoM14
v3jsU449kaTAHnEBj3fYr+JrrBWlKKAvJtMXg/dXeUTwosQuCqyRymJI4nhg
8uv4ZclQ4D4HzXsFO+eQ+xV+WQoo03O0WQ+oiO/qq5QVOQr4WD70+orj683L
6axABQporpx+zMLxFzYtlju9F88negvnPxyfE0f9q4aUKLBu106y2SMqalra
2dewnwIlPwOCLtZQUbisBVXjAAVe9Sudba2lInWrsPFyTQoUaC+0H8DnI/9B
95+cQxRYuDrNq9xIRRFOsTsIR/D+GJt+v/mWivanPJRb0MXzcRVVt8Dncarm
q6q3PgXUbLf78OPzaiusYXD2KAVyxm9E32ujogNNjIvoGAV0Cg59t8D54LuC
UfU/GwrIq61jd8b5pNgmoD7IlgKtnP1n7uN84xib+3bGjgIOb2YcVsapqG1o
sW/YkQIm/spbG6ZxfKeVLDeep8Ani86ZPJy/nBe4DYk+FPAN7fBm8tGQ16Er
a7f4UcCKe1vT9EYaCiNMNlT4U2DHGuuiFWGcLznbDgwH4vjUm0g9IEZD7ZtT
5HTCKfDOh9HEjfMp0hTgW07A4zd3+Lddl4bEQ4S7g+7i9bbz/rgznIY+L21z
8e6lgNyQzN9SfN/8MtR+cGN/GgieGgyLZx9FtdyiXPT0NHjSq5595Pso2hH7
lhWSmQZbvj198uvnKIr7F9DCn5UGKc+ubypeGEWWc12JmjfSYN+H8RQ2fH+P
f03jS76TBiupp49d5RtDWx7yCauVpcGpd2d/aMiPocDT6yUi36aBk8nDzw7O
Y0i1YE5NfDENPq5V70LNY6j2rBPbtd9pUFnO8ZPv/RjS29b2ceOfNCDkEZ58
bhtDVul3L7KvpIH+35G97p24P6Llncl16RD/4/OC19cxVGNfyV0rkA4NNbs3
b/g5hkDkEs1aNh2IxStP47fT0bv2vvL2PekQNaP+kk+Sjk4k64WZyKfDjcLm
6xQpOnJZt22zzr50kLXnqyHvpqOYHy1mMmrpMEv7wPJXpqPmD7LPfuqkA9+S
glOPHh2Zx42mUqzTIXkmoZUT11NHTVLNNGzSIX9c+nmyBx0B/0HuwTPpILc3
TlXAi45UslJjZR3SYa1D50NefzraVHQwrOFcOoS8vq87EUZHA2/JF6d80uHO
SGGFCoWO3NYf1jdKSofJiPImNlz/Obcw2KaT08H/9MP8Q0/pyDYlrTEjNR00
pypM/WvoyEyEqTWclg5Z2oV8g8/pSEkmXSXwejo4MhwoGU10NK/PkigoTAf+
4xyxt/roaIYrY9C4OB0I9Ye1H+H6k9WmnT1zLx2E1nAxWgbo6LNVhsihsnSg
hG4Vmhmmo/rzOrydVengUrdOUIpFR4/3jLcEPUqHQ85vE/dM0FH5VAZJ/Ek6
5Gz05VCcoqPcgPG1F2vSYUxSlFftOx3d0Mx8wV+XDvcyTmarztJR+rJOxKN6
vF/K69SU53C9+mL8kG1DOgQd1OtXmKej6JjM3/8a06HUVTlZZpGO/gfOQYGn

           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2973#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5]], 
          LineBox[CompressedData["
1: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
dCsDRUal/VxtSIH62S8P7EQZ6H/Oed+u
           "]]}, 
         Annotation[#, "Charting`Private`Tag$3029#1"]& ]}}, {}, {}}}, {
    PlotLabel -> FormBox["\"Electronic Polarization\"", TraditionalForm], 
     AxesLabel -> {
       FormBox[
        RowBox[{"B", "(", "G", ")"}], TraditionalForm], 
       FormBox[
        SubscriptBox["P", "0"], TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 1199.9999755102042`}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"0Degree\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"0.5Degree\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"1Degree\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"1.5Degree\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"2Degree\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"2.5Degree\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"3Degree\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7795462321573467`*^9, 3.779620016166093*^9, 
  3.779683951016554*^9, 3.779684203946233*^9, 3.779722730077181*^9, 
  3.78142554116012*^9, 3.781431955935874*^9, 3.781435807309936*^9, 
  3.781436198965149*^9, 3.7814365441724153`*^9, 3.7814367485904007`*^9, 
  3.781437677753776*^9, 3.781437959822459*^9, 3.781438208671257*^9, 
  3.7814383858417535`*^9, 3.781438602029704*^9, 3.781438897263222*^9, 
  3.781439208841132*^9, 3.7814394495352225`*^9, 3.7814446716779127`*^9, 
  3.781444834877771*^9, 3.7814450556358795`*^9, 3.7814458036520343`*^9, 
  3.7814463658990636`*^9, 3.781446747596133*^9, 3.781447264683482*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"af429848-40ec-4afa-9158-b0710cbc7169"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"psi", "=", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"1", "/", "180"}]}]}], ";", 
  RowBox[{"Bz", "=", "1040"}], ";", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Rho", "[", 
         RowBox[{"[", 
          RowBox[{"16", ",", "16"}], "]"}], "]"}], "+", 
        RowBox[{"Rho", "[", 
         RowBox[{"[", 
          RowBox[{"17", ",", "17"}], "]"}], "]"}], "+", 
        RowBox[{"Rho", "[", 
         RowBox[{"[", 
          RowBox[{"18", ",", "18"}], "]"}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Rho", "[", 
         RowBox[{"[", 
          RowBox[{"16", ",", "16"}], "]"}], "]"}], "+", 
        RowBox[{"Rho", "[", 
         RowBox[{"[", 
          RowBox[{"17", ",", "17"}], "]"}], "]"}], "+", 
        RowBox[{"Rho", "[", 
         RowBox[{"[", 
          RowBox[{"18", ",", "18"}], "]"}], "]"}], "+", 
        RowBox[{"Rho", "[", 
         RowBox[{"[", 
          RowBox[{"19", ",", "19"}], "]"}], "]"}], "+", 
        RowBox[{"Rho", "[", 
         RowBox[{"[", 
          RowBox[{"20", ",", "20"}], "]"}], "]"}], "+", 
        RowBox[{"Rho", "[", 
         RowBox[{"[", 
          RowBox[{"21", ",", "21"}], "]"}], "]"}], "+", 
        RowBox[{"Rho", "[", 
         RowBox[{"[", 
          RowBox[{"13", ",", "13"}], "]"}], "]"}], "+", 
        RowBox[{"Rho", "[", 
         RowBox[{"[", 
          RowBox[{"14", ",", "14"}], "]"}], "]"}], "+", 
        RowBox[{"Rho", "[", 
         RowBox[{"[", 
          RowBox[{"15", ",", "15"}], "]"}], "]"}]}], ")"}]}]}], ")"}], "/.", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"M", "==", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"21", ",", "21"}], "}"}]}], "]"}]}], "]"}], ",", 
      RowBox[{"Flatten", "[", "Rho", "]"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7814370092312794`*^9, 3.7814370576898117`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"65334108-6c18-495d-917c-8308f943ac9c"],

Cell[BoxData[
 RowBox[{"0.36891312222825534`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.2408212676545753`*^-17", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.7814370298932595`*^9, 3.781437058221395*^9}},
 CellLabel->"Out[47]=",ExpressionUUID->"d8fd5a30-3c33-4caa-8eb3-bba76b498e48"]
}, Open  ]]
},
WindowSize->{994, 666},
WindowMargins->{{72, Automatic}, {-33, Automatic}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (2018\:5e743\:670828\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 60694, 1629, 5131, "Input",ExpressionUUID->"86437e81-5544-440c-81ae-c9e12f3593e6"],
Cell[61277, 1653, 142361, 2516, 267, "Output",ExpressionUUID->"f736f15f-78b9-46f3-986b-00b4264bed6d"],
Cell[203641, 4171, 148204, 2610, 267, "Output",ExpressionUUID->"af429848-40ec-4afa-9158-b0710cbc7169"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351882, 6786, 2154, 62, 121, "Input",ExpressionUUID->"65334108-6c18-495d-917c-8308f943ac9c"],
Cell[354039, 6850, 294, 4, 32, "Output",ExpressionUUID->"d8fd5a30-3c33-4caa-8eb3-bba76b498e48"]
}, Open  ]]
}
]
*)

